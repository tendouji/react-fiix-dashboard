{"version":3,"sources":["models/index.ts","constants/layout.tsx","constants/routes.ts","services/states.ts","components/HOC/index.tsx","pages/Auth/Login/index.tsx","components/Accordion/AccordionList/index.tsx","components/Accordion/index.tsx","pages/Components/Accordion/index.tsx","components/Button/index.tsx","pages/Components/Alert/index.tsx","components/Table/index.tsx","pages/Components/Table/index.tsx","pages/Dashboard/index.tsx","components/Notification/index.tsx","components/Header/index.tsx","components/Modal/index.tsx","constants/app.ts","components/NavigationList/index.tsx","components/SideMenu/ProfileWidget/index.tsx","components/Footer/index.tsx","components/SideMenu/index.tsx","components/Notification/NotificationItem/index.tsx","components/Notification/PanelList/index.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["PageType","RoleType","gaps","fontSizes","colorRange","elementSizes","MediaScreenSmallWidth","MediaScreenMediumWidth","MediaScreenLargeWidth","HeaderHeight","FooterHeight","MenuWidth","MenuCloseWidth","SubMenuExpandedMaxHeight","SiteTitleHeight","ProfileWidgetHeight","ButtonHeight","ModalMaxWidth","ModalLargeMaxWidth","ModalTitleHeight","AccordionMaxWidth","AccordionTitleHeight","NotificationPanelWidth","BorderRadius","Border1Pixel","color","InputAreaHeight","PlayerCountInputWidth","PlayerCountButtonWidth","PlayerNameWidth","CardHeight","CardWidth","ToggleHeight","ToggleWidth","ToggleBorderWidth","animations","styleGroup","assets","ROOT","process","this","routes","HOME","COMPONENTS","GlobalInitialState","curPage","isLoggedIn","showNotificationPanel","lockPageScroll","themeColor","primaryColor","secondaryColor","grayColor","infoColor","successColor","dangerColor","warningColor","modalData","title","content","size","positiveButtonText","negativeButtonText","positiveButtonAction","console","log","negativeButtonAction","isShown","showNegativeButton","allowOverlayClose","userInfo","username","displayName","email","imagePath","IMAGE","createdAt","roles","Administrator","notification","notificationList","type","redirectPath","read","icon","globalState","Actions","update","updateThemeColor","data","state","newThemeColor","updateLoggedSession","val","updateCurPage","updateUserInfo","info","openModal","closeModal","newModalData","setTimeout","showHideNotificationPanel","updateLockPageScroll","document","body","classList","add","remove","flyd","stream","states","scan","patch","merge","actions","withMeiosis","Component","props","_isMounted","unlisten","redirectToSignIn","history","location","pathname","SIGNIN","SIGNUP","replace","redirectToPrivatePage","DASHBOARD","checkUserInfo","map","setState","globalStates","globalActions","React","className","children","titleIcon","onClick","AccordionListWrapper","join","e","styled","div","lighten","listData","firstItemOpen","allowMultipleOpen","maxContentHeight","contentNoPadded","accordionRef","useRef","useEffect","current","curAccordion","firstChild","openItem","curItem","curBody","getElementsByClassName","curContent","contains","removeAttribute","contentHeight","offsetHeight","style","height","otherSiblings","curElm","siblings","child","nodeType","push","nextSibling","getItemSiblings","onItemClickHandler","currentTarget","parentNode","resizeOpenItem","window","addEventListener","AccordionWrapper","ref","listItem","index","testProp","key","getAccordionHandler","accordionData","ContentListWrapper","ul","ButtonWrapper","button","openModalHandler","modalObj","tableData","TableWrapper","highlightAltRow","columnRelayoutResponsive","cellNoWrap","headerData","item","rowData","rowItem","key1","key2","getTableDataHandler","disableClick","getNotificationCount","count","forEach","NotificationWrapper","undefined","darken","HeaderWrapper","header","showModal","modalRef","onCloseHandler","_ref","display","ModalWrapper","dangerouslySetInnerHTML","__html","action","rgba","appData","logoPath","profilePath","pageList","Home","label","path","Dashboard","About","ABOUT_US","subMenuList","Accordion","COMPONENT_ACCORDION","Alert","COMPONENT_ALERT","Form","Table","COMPONENT_TABLE","FAQ","triggerCloseSubmenu","useLocation","subListRef","generateListContent","name","onShowHideSubmenu","t","hasActiveSubmenu","filter","link","length","subMenuItems","closeAllSubmenu","NavigationListWrapper","to","activeClassName","exact","NavigationSubMenuWrapper","index2","innerListStyle","SubMenuArrowWidth","ProfileWidgetWrapper","backgroundImage","href","FooterWrapper","Date","getFullYear","footer","onShowHide","onHoverShow","useState","closeSubMenu","setCloseSubMenuStatus","SideMenuWrapper","onMouseEnter","onMouseLeave","notificationItemData","NotificationItemWrapper","notificationData","NotificationPanelListWrapper","notificationGroup","notificationItem","App","dashboardRef","createRef","resizeTimer","resizeDoneEvent","CustomEvent","detail","onWindowResizeHandler","clearTimeout","dispatchEvent","showHideSideMenuEvent","isHidden","onShowHideMenuHandler","dashboardDom","onHoverShowMenuHandler","show","removeEventListener","DashboardScreen","DashboardWrapper","component","RoutingComponent","DashboardScreenBase","withRouter","match","Login","ComponentAccordion","ComponentAlert","ComponentTable","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"uJAQYA,EAmBAC,E,6GCzBNC,EACM,YADNA,EAEK,WAFLA,EAGM,OAHNA,EAIK,OAGLC,EACM,WADNA,EAEK,UAFLA,EAGM,WAHNA,EAIK,OAJLA,EAKM,UAGNC,EACE,OADFA,EAEE,MAFFA,EAGE,MAHFA,EAIE,MAJFA,EAKE,MAGFC,EAAsC,CACxCC,sBAAuB,QACvBC,uBAAwB,QACxBC,sBAAuB,SAEvBC,aAAc,OACdC,aAAc,OACdC,UAAW,QACXC,eAAgB,OAChBC,yBAA0B,QAE1BC,gBAAiB,OACjBC,oBAAqB,OAErBC,aAAc,OACdC,cAAe,QACfC,mBAAoB,QACpBC,iBAAkB,SAClBC,kBAAmB,QACnBC,qBAAsB,SACtBC,uBAAwB,QAExBC,aAAc,MACdC,aAAc,SAACC,GAAD,0BAAwCA,IAEtDC,gBAAiB,OACjBC,sBAAuB,OACvBC,uBAAwB,OACxBC,gBAAiB,SACjBC,WAAY,OACZC,UAAW,OACXC,aAAc,OACdC,YAAa,SACbC,kBAAmB,OAIjBC,EACU,QAGVC,EACW,oGCjEXC,EAAyB,CAC3BC,KAAMC,wBAEN,YAAc,OAAOC,KAAKF,KAAO,YAG/BG,EAAyB,CAC3BC,KAAM,IAEN,aAAe,OAAOF,KAAKE,KAAO,UAClC,gBAAkB,OAAOF,KAAKE,KAAO,aACrC,eAAiB,OAAOF,KAAKE,KAAO,YACpC,UAAY,OAAOF,KAAKE,KAAO,OAE/B,iBAAmB,OAAOF,KAAKE,KAAO,eACtC,sBAAwB,OAAOF,KAAKG,WAAa,SACjD,0BAA4B,OAAOH,KAAKG,WAAa,aACrD,sBAAwB,OAAOH,KAAKG,WAAa,W,0CFXzC3C,K,YAAAA,E,sBAAAA,E,cAAAA,E,YAAAA,E,cAAAA,E,sBAAAA,E,cAAAA,E,WAAAA,M,cAmBAC,K,wBAAAA,E,8BAAAA,E,gBAAAA,E,iBAAAA,M,KGdL,I,mCAAM2C,GAA6C,CACtDC,QAAS,GACTC,YAAY,EACZC,uBAAuB,EACvBC,gBAAgB,EAChBC,WAAY,CACRC,aAAc,UACdC,eAAgB,UAChBC,UAAW,UACXC,UAAW,UACXC,aAAc,UACdC,YAAa,UACbC,aAAc,WAElBC,UAAW,CACPC,MAAO,UACPC,QAAS,gBACTC,KAAM,GACNC,mBAAoB,KACpBC,mBAAoB,SACpBC,qBAAsB,kBAAMC,QAAQC,IAAI,OACxCC,qBAAsB,kBAAMF,QAAQC,IAAI,WACxCE,SAAS,EACTC,oBAAoB,EACpBC,mBAAmB,GAEvBC,SAAU,CACNC,SAAU,QACVC,YAAa,uBACbC,MAAO,uBACPC,UAAWrC,EAAOsC,MAAQ,wBAC1BC,UAAW,WACXC,MAAO5E,EAAS6E,cAChBC,aAAc,CAAC,CACXrB,MAAO,QACPsB,iBAAkB,CAAC,CACfC,KAAM,SACNvB,MAAO,4BACPgB,UAAWrC,EAAOsC,MAAQ,yBAC1BO,aAAc,QACdC,MAAM,EACNP,UAAW,YACZ,CACCK,KAAM,UACNvB,MAAO,6BACPgB,UAAWrC,EAAOsC,MAAQ,yBAC1BO,aAAc,qBACdC,MAAM,EACNP,UAAW,YACZ,CACCK,KAAM,WACNvB,MAAO,uCACP0B,KAAM,aACNF,aAAc,OACdC,MAAM,EACNP,UAAW,cAEhB,CACClB,MAAO,SACPsB,iBAAkB,CAAC,CACfC,KAAM,UACNvB,MAAO,0BACPgB,UAAWrC,EAAOsC,MAAQ,yBAC1BO,aAAc,IACdC,MAAM,EACNP,UAAW,YACZ,CACCK,KAAM,SACNvB,MAAO,4BACPgB,UAAWrC,EAAOsC,MAAQ,yBAC1BO,aAAc,IACdC,MAAM,EACNP,UAAW,YACZ,CACCK,KAAM,UACNvB,MAAO,4BACPgB,UAAWrC,EAAOsC,MAAQ,yBAC1BO,aAAc,IACdC,MAAM,EACNP,UAAW,YACZ,CACCK,KAAM,WACNvB,MAAO,uCACP0B,KAAM,aACNF,aAAc,IACdC,MAAM,EACNP,UAAW,iBAiHZS,GA3GU,CACrBzC,sBACA0C,QAAS,SAACC,GACN,MAAO,CACHC,iBAAkB,SAACC,GACfF,GAAO,SAACG,GACJ,IAAMC,EAA6B,2BAC5BD,EAAMzC,YACNwC,GAGP,OADAC,EAAMzC,WAAa0C,EACZD,MAGfE,oBAAqB,SAACC,GAClBN,GAAO,SAACG,GAEJ,OADAA,EAAM5C,WAAa+C,EACZH,MAGfI,cAAe,SAACD,GACZN,GAAO,SAACG,GAEJ,OADAA,EAAM7C,QAAUgD,EACTH,MAGfK,eAAgB,SAACC,GACbT,GAAO,SAACG,GAEJ,OADAA,EAAMpB,SAAW0B,EACVN,MAGfO,UAAW,SAACR,GACRF,GAAO,SAACG,GAEJ,OADAA,EAAMjC,UAAYgC,EACXC,MAGfQ,WAAY,WACRX,GAAO,SAACG,GACJ,IAAMS,EAAY,2BACXT,EAAMjC,WADK,IAEdU,SAAS,IAGb,OADAuB,EAAMjC,UAAY0C,EACXT,KAEXU,YAAW,WACPb,GAAO,SAACG,GAEJ,OADAA,EAAMjC,UAAYb,GAAmBa,UAC9BiC,OAEZ,MAEPW,0BAA2B,SAACZ,GACxBF,GAAO,SAACG,GAEJ,OADAA,EAAM3C,sBAAwB0C,EACvBC,MAGfY,qBAAsB,SAACb,GACdA,EACDc,SAASC,KAAKC,UAAUC,IAAI,mBAE5BH,SAASC,KAAKC,UAAUE,OAAO,mBAGnCpB,GAAO,SAACG,GAEJ,OADAA,EAAM1C,eAAiByC,EAChBC,S,QCtKrBH,GAA+BqB,IAAKC,SACpCC,GAASF,IAAKG,MAChB,SAACrB,EAA+BsB,GAAhC,OAA+CC,YAAMvB,EAAOsB,KAC5D3B,GAAYzC,mBACZ2C,IAEE2B,GAAU7B,GAAYC,QAAQC,IAkHrB4B,GAtGK,SAA6BC,GAkG7C,OAlGmF,kDAM/E,WAAYC,GAAW,IAAD,8BAClB,cAAMA,IAJFC,gBAGc,IAFdC,cAEc,IAiCtBC,iBAAmB,WAAO,IACdC,EAAY,EAAKJ,MAAjBI,QACFA,IACEA,EAAQC,SAASC,WAAalF,EAAOC,MACrC+E,EAAQC,SAASC,WAAalF,EAAOmF,QACrCH,EAAQC,SAASC,WAAalF,EAAOoF,QAErCJ,EAAQK,QAAQ,CAAEH,SAAUlF,EAAOmF,WAxCzB,EA8CtBG,sBAAwB,WAAO,IACnBN,EAAY,EAAKJ,MAAjBI,QACFA,IACEA,EAAQC,SAASC,WAAalF,EAAOC,MACrC+E,EAAQC,SAASC,WAAalF,EAAOmF,QACrCH,EAAQC,SAASC,WAAalF,EAAOoF,QAErCJ,EAAQK,QAAQ,CAAEH,SAAUlF,EAAOuF,cArDzB,EA0DtBC,cAAgB,WACW,EAAKvC,MAApB5C,WAIJ,EAAKiF,wBAFL,EAAKP,oBA3DT,EAAK9B,MAAQoB,KAEb,EAAKQ,YAAa,EAJA,EANyD,qDAa/E,WAAqB,IAAD,OAChB9E,KAAK8E,YAAa,EAElB9E,KAAKyF,gBAELnB,GAAOoB,KAAI,SAACxC,GAAD,OAAmC,EAAK4B,YAAc,EAAKa,SAASzC,QAlBJ,kCA4B/E,WACIlD,KAAK8E,YAAa,IA7ByD,oBA6F/E,WACI,OAAO,eAACF,EAAD,aAAWgB,aAAc5F,KAAKkD,MAAO2C,cAAenB,IAAa1E,KAAK6E,YA9FF,GAEzDiB,IAAMlB,YCdrBD,OANwC,SAAC,GAAgB,EAAfoB,UACrD,OAAO,sBAAKA,UAAU,QAAf,2B,SCmDIpB,OAzCwD,SAAC,GAOjE,IANHiB,EAME,EANFA,aACA1E,EAKE,EALFA,MACA8E,EAIE,EAJFA,SACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,QACAH,EACE,EADFA,UAQA,OACI,gBAACI,GAAD,CACIJ,UAAW,CACP,iBACGA,EAAY,IAAMA,EAAY,IACnCK,KAAK,IACP3F,WAAYmF,EAAcnF,WAL9B,UAOI,uBACIsF,UAAW,CACP,kBACEE,GAA2B,KAAdA,EAAgC,GAAb,YACpCG,KAAK,IACPF,QAnBW,SAACG,GACfH,GAA8B,oBAAZA,GACnBA,EAAQG,IAYR,UAOI,sBAAKN,UAAU,OAAf,SAAsB,oBAAGA,UAAU,iBAAb,SAAgCE,MACtD,sBAAKF,UAAU,OAAf,SAAwB7E,OAE5B,sBAAK6E,UAAU,oBAAf,SACI,sBAAKA,UAAU,cAAf,SACKC,YAUfG,GAAuBG,IAAOC,IAAV,i0EAOP1I,EAAagB,sBAEd,SAAAgG,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWC,gBAM7C7C,EAAagB,qBACZhB,EAAagB,qBACPnB,EAMCC,EAKQE,EAAagB,qBAErCe,EAQQ/B,EAAagB,qBACZhB,EAAagB,qBAEVlB,GAQO,SAAAkH,GAAK,OAAI2B,YAAQ,IAAM3B,EAAMpE,WAAWG,aASnC/C,EAAagB,qBAClBnB,GAQV,SAAAmH,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,cACpEjB,EAGNjC,GAKE,SAAAmH,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,eA8BtE,SAAAiE,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,eClB3F+D,OAtIgD,SAAC,GAQzD,IAPHiB,EAOE,EAPFA,aACAa,EAME,EANFA,SACAC,EAKE,EALFA,cACAC,EAIE,EAJFA,kBACAC,EAGE,EAHFA,iBACAC,EAEE,EAFFA,gBACAd,EACE,EADFA,UAEMe,EAAeC,iBAAuB,MAE5CC,qBAAU,WACN,GAAKF,EAAaG,QAAS,CACvB,IAAMC,EAAeJ,EAAaG,QAC7BP,GAMD9C,YAAW,WACP,IAAMuD,EAA6BD,EAAaC,WAChDC,EAASD,KACV,QAGZ,CAACT,IAGJ,IAiBMU,EAAW,SAACC,GACd,IAAMC,EAA0BD,EAAQE,uBAAuB,qBAAqB,GAC9EC,EAA6BF,EAAQC,uBAAuB,eAAe,GAEjF,GAAIF,EAAQpD,UAAUwD,SAAS,QAC3BJ,EAAQpD,UAAUE,OAAO,QACzBmD,EAAQI,gBAAgB,aACrB,CACHL,EAAQpD,UAAUC,IAAI,QAEtB,IAAIyD,EAAgBH,EAAWI,aAM/B,GALKhB,IACDe,EAAgBf,EAAmBe,EAAgBf,EAAmBe,GAE1EL,EAAQO,MAAMC,OAASH,EAAgB,MAEnChB,EAAmB,CACnB,IADmB,EACboB,EAlCM,SAACC,GACrB,IAAIC,EAA6B,GAEjC,IAAInB,EAAaG,QACb,OAAOgB,EAIX,IADA,IAAIC,EAAwBpB,EAAaG,QAAQE,WAC3Ce,GACoB,IAAnBA,EAAMC,UAAkBD,IAAUF,GACjCC,EAASG,KAAKF,GAElBA,EAAQA,EAAMG,YAElB,OAAOJ,EAoByCK,CAAgBjB,GADrC,eAEAU,GAFA,IAEnB,IAAI,EAAJ,qBAAkC,CAAC,IAAzBG,EAAwB,QAC9B,GAAGA,EAAMjE,UAAUwD,SAAS,QACxBS,EAAMjE,UAAUE,OAAO,QACW+D,EAAMX,uBAAuB,qBAAqB,GAC1EG,gBAAgB,UANf,kCAazBa,EAAqB,SAAClC,GACxB,IAAMgB,EAA0BhB,EAAEmC,cAAcC,WAChDrB,EAASC,IAGPqB,EAAiB,WACnB,GAAK5B,EAAaG,QAAS,CACvB,IADuB,EACjBjB,EAAsCc,EAAaG,QAAQM,uBAAuB,kBADjE,eAEJvB,GAFI,IAEvB,IAAI,EAAJ,qBAA6B,CAAC,IAApBkC,EAAmB,QACzB,GAAGA,EAAMjE,UAAUwD,SAAS,QAAS,CACjC,IACMH,EAD0BY,EACQX,uBAAuB,qBAAqB,GAGhFI,EAF+BL,EAAQC,uBAAuB,eAAe,GAElDK,aAC1BhB,IACDe,EAAgBf,EAAmBe,EAAgBf,EAAmBe,GAG1EL,EAAQO,MAAMC,OAASH,EAAgB,OAbxB,iCA6B/B,OAVAgB,OAAOC,iBAAiB,aAAa,SAACvC,GAClCqC,OAEJC,OAAOC,iBAAiB,oBAAoB,SAACvC,GACzCzC,YAAW,WAEP8E,MACD,QAIH,eAACG,GAAD,CACI9C,UAAW,CACP,YACGc,EAAkB,qBAAuB,GACzCd,EAAY,IAAMA,EAAY,IACnCK,KAAK,IACP0C,IAAKhC,EACLrG,WAAYmF,EAAcnF,WAP9B,SASIgG,EAASf,KAAI,SAACqD,EAA6BC,GAA9B,OACT,wBAAC,GAAD,yBACIC,SAAQ,aAAQD,GAChB9H,MAAO6H,EAAS7H,MAChB+E,UAAW8C,EAAS9C,WACZW,EAAmB,CAAEA,oBAAqB,IAJtD,IAKIV,QAASqC,EACTW,IAAG,aAAQF,KACZD,EAAS/C,kBAStB6C,GAAmBvC,IAAOC,IAAV,iKAEL1I,EAAae,mBACf,SAAAiG,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,cACrE/C,EAAakB,cCfnB4F,OAnIkE,SAAC,GAA6C,EAA5CkB,cAA4C,EAA7BD,aAA6B,EAAfG,UAAgB,IACtHoD,EAAsB,SAAC1G,GACzB,IAAI2G,EAAqC,GACzC,OAAO3G,GACH,IAAK,QACD2G,EAAgB,CAAC,CACblI,MAAO,8CACP8E,SAAU,8DAA+B,wBAA/B,8BAAgE,wBAAhE,wBAA2F,wBAA3F,uBAAqH,wBAArH,yBAAiJ,wBAAM,wBAAvJ,2BAAqL,wBAArL,4BAAoN,wBAApN,0BAAiP,wBAAjP,sCACX,CACC9E,MAAO,iDACP8E,SAAU,8DAA+B,wBAA/B,8BAAgE,wBAAhE,wBAA2F,wBAA3F,uBAAqH,wBAArH,yBAAiJ,wBAAM,wBAAvJ,2BAAqL,wBAArL,4BAAoN,wBAApN,0BAAiP,wBAAjP,kCAAsR,wBAAM,wBAA5R,6BAA4T,wBAA5T,8BAA6V,wBAA7V,wBAAwX,wBAAxX,uBAAkZ,wBAAlZ,yBAA8a,wBAAM,wBAApb,2BAAkd,wBAAld,4BAAif,wBAAjf,0BAA8gB,wBAA9gB,sCACX,CACC9E,MAAO,iDACP8E,SAAU,8DAA+B,wBAA/B,8BAAgE,wBAAhE,wBAA2F,wBAA3F,uBAAqH,wBAArH,yBAAiJ,wBAAM,wBAAvJ,2BAAqL,wBAArL,4BAAoN,wBAApN,0BAAiP,wBAAjP,kCAAsR,wBAAM,wBAA5R,6BAA4T,wBAA5T,8BAA6V,wBAA7V,wBAAwX,wBAAxX,uBAAkZ,wBAAlZ,yBAA8a,wBAAM,wBAApb,2BAAkd,wBAAld,4BAAif,wBAAjf,0BAA8gB,wBAA9gB,uCAElB,MACA,IAAK,aACDoD,EAAgB,CAAC,CACblI,MAAO,8CACP8E,SAAU,8DAA+B,wBAA/B,8BAAgE,wBAAhE,wBAA2F,wBAA3F,uBAAqH,wBAArH,yBAAiJ,wBAAM,wBAAvJ,2BAAqL,wBAArL,4BAAoN,wBAApN,0BAAiP,wBAAjP,qCACVC,UAAW,kBACZ,CACC/E,MAAO,iDACP8E,SAAU,8DAA+B,wBAA/B,8BAAgE,wBAAhE,wBAA2F,wBAA3F,uBAAqH,wBAArH,yBAAiJ,wBAAM,wBAAvJ,2BAAqL,wBAArL,4BAAoN,wBAApN,0BAAiP,wBAAjP,kCAAsR,wBAAM,wBAA5R,6BAA4T,wBAA5T,8BAA6V,wBAA7V,wBAAwX,wBAAxX,uBAAkZ,wBAAlZ,yBAA8a,wBAAM,wBAApb,2BAAkd,wBAAld,4BAAif,wBAAjf,0BAA8gB,wBAA9gB,qCACVC,UAAW,gBACZ,CACC/E,MAAO,iDACP8E,SAAU,8DAA+B,wBAA/B,8BAAgE,wBAAhE,wBAA2F,wBAA3F,uBAAqH,wBAArH,yBAAiJ,wBAAM,wBAAvJ,2BAAqL,wBAArL,4BAAoN,wBAApN,0BAAiP,wBAAjP,kCAAsR,wBAAM,wBAA5R,6BAA4T,wBAA5T,8BAA6V,wBAA7V,wBAAwX,wBAAxX,uBAAkZ,wBAAlZ,yBAA8a,wBAAM,wBAApb,2BAAkd,wBAAld,4BAAif,wBAAjf,0BAA8gB,wBAA9gB,qCACVC,UAAW,cAEnB,MACA,IAAK,oBACDmD,EAAgB,CAAC,CACblI,MAAO,8CACP8E,SAAU,gBAACqD,GAAD,CAAoBtD,UAAU,eAA9B,UACN,6DACA,8DACA,6EACA,iFACA,+DAEJE,UAAW,kBACZ,CACC/E,MAAO,iDACP8E,SAAU,gBAACqD,GAAD,CAAoBtD,UAAU,eAA9B,UACN,6DACA,8DACA,6EACA,iFACA,+DAEJE,UAAW,gBACZ,CACC/E,MAAO,iDACP8E,SAAU,gBAACqD,GAAD,CAAoBtD,UAAU,eAA9B,UACN,6DACA,8DACA,6EACA,iFACA,+DAEJE,UAAW,cAMvB,OAAOmD,GAGX,OAAO,uBAAKrD,UAAU,sBAAf,UACH,4CAEA,uBAAKA,UAAU,aAAf,UACI,uBAAKA,UAAU,SAAf,UACI,kDACA,eAAC,GAAD,CACIU,SAAU0C,EAAoB,WAElC,wBACA,wBAEA,6DACA,eAAC,GAAD,CACI1C,SAAU0C,EAAoB,gBAElC,wBACA,wBACA,iEACA,eAAC,GAAD,CACI1C,SAAU0C,EAAoB,cAC9BzC,eAAe,IAEnB,wBACA,wBACA,2EACA,6DACA,eAAC,GAAD,CACID,SAAU0C,EAAoB,cAC9BzC,eAAe,EACfC,mBAAmB,IAEvB,wBACA,2BAEJ,uBAAKZ,UAAU,SAAf,UACI,wEACA,eAAC,GAAD,CACIU,SAAU0C,EAAoB,cAC9BvC,iBAAkB,IAClBF,eAAe,IAEnB,wBACA,wBAEA,4EACA,wFACA,eAAC,GAAD,CACID,SAAU0C,EAAoB,qBAC9BvC,iBAAkB,IAClBF,eAAe,EACfG,iBAAiB,IAGrB,wBACA,oCAYVwC,GAAqB/C,IAAOgD,GAAV,oVAOL5L,EAAcA,EACRG,EAAamB,aAAa,SC/HpC2F,OAb0C,SAAC,GAAkD,IAAjDiB,EAAgD,EAAhDA,aAAcI,EAAkC,EAAlCA,SAAUE,EAAwB,EAAxBA,QAASH,EAAe,EAAfA,UACxF,OACI,eAACwD,GAAD,CACIxD,UAAW,CACP,MACGA,EAAY,IAAMA,EAAY,IACnCK,KAAK,IACP3F,WAAYmF,EAAcnF,WAC1ByF,QAASA,EANb,SAOGF,OAOLuD,GAAgBjD,IAAOkD,OAAV,ggCAEJ3L,EAAaW,aACVd,EAGGG,EAAakB,cAGV,SAAA8F,GAAK,OAAIA,EAAMpE,WAAWC,eAM1BhD,GAII,SAAAmH,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWC,iBAK5D,SAAAmE,GAAK,OAAIA,EAAMpE,WAAWC,gBASX,SAAAmE,GAAK,OAAIA,EAAMpE,WAAWC,eAC7B7C,EAAakB,cAMrB,SAAA8F,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWC,iBAGlC,SAAAmE,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWC,iBC+EtEiE,OAlJ0D,SAAC,GAA8C,IAA7CkB,EAA4C,EAA5CA,cACjE4D,GAD6G,EAA7B7D,aAA6B,EAAfG,UAC3E,SAACtD,GACtB,IAAIiH,EAAW,GACf,OAAOjH,GACH,IAAK,QACDiH,EAAW,CACPxI,MAAO,cACPC,QAAS,qCACTE,mBAAoB,KACpBE,qBAAsB,kBAAMC,QAAQC,IAAI,OACxCE,SAAS,EACTE,mBAAmB,GAE3B,MACA,IAAK,oBACD6H,EAAW,CACPxI,MAAO,gCACPC,QAAS,0DACTE,mBAAoB,KACpBC,mBAAoB,SACpBC,qBAAsB,kBAAMC,QAAQC,IAAI,OACxCC,qBAAsB,kBAAMF,QAAQC,IAAI,WACxCE,SAAS,EACTC,oBAAoB,EACpBC,mBAAmB,GAE3B,MACA,IAAK,eACD6H,EAAW,CACPxI,MAAO,+BACPC,QAAQ,qtFA0CRE,mBAAoB,KACpBC,mBAAoB,SACpBC,qBAAsB,kBAAMC,QAAQC,IAAI,OACxCC,qBAAsB,kBAAMF,QAAQC,IAAI,WACxCE,SAAS,EACTC,oBAAoB,EACpBC,mBAAmB,GAE3B,MACA,IAAK,OACD6H,EAAW,CACPxI,MAAO,gCACPC,QAAQ,2sBAWRE,mBAAoB,KACpBC,mBAAoB,SACpBC,qBAAsB,kBAAMC,QAAQC,IAAI,OACxCC,qBAAsB,kBAAMF,QAAQC,IAAI,WACxCL,KAAM,OACNO,SAAS,EACTC,oBAAoB,EACpBC,mBAAmB,GAK/BgE,EAAcpC,UAAUiG,KAG5B,OAAO,uBAAK3D,UAAU,kBAAf,UACH,yCAEA,gDAEA,uBAAKA,UAAU,aAAf,UACI,uBAAKA,UAAU,SAAf,UACI,8CACA,mHACA,eAAC,GAAD,CAAQG,QAAS,kBAAMuD,EAAiB,UAAxC,wBACA,wBACA,wBACA,wBAEA,wEACA,eAAC,GAAD,CAAQvD,QAAS,kBAAMuD,EAAiB,sBAAxC,wBACA,wBACA,wBACA,2BAEJ,uBAAK1D,UAAU,SAAf,UACI,+DACA,eAAC,GAAD,CAAQG,QAAS,kBAAMuD,EAAiB,iBAAxC,wBACA,wBACA,wBACA,wBAEA,8CACA,eAAC,GAAD,CAAQvD,QAAS,kBAAMuD,EAAiB,SAAxC,wBACA,wBACA,oCCjGD9E,OAnCwC,SAAC,GAA0C,IAAzCiB,EAAwC,EAAxCA,aAAc+D,EAA0B,EAA1BA,UAAW5D,EAAe,EAAfA,UAC9E,OACI,eAAC6D,GAAD,CACI7D,UAAW,CACP,QACG4D,EAAUE,gBAAkB,qBAAuB,GACnDF,EAAUG,yBAA2B,mBAAqB,GAC1DH,EAAUI,WAAa,gBAAkB,GACzChE,EAAY,IAAMA,EAAY,IACnCK,KAAK,IACP3F,WAAYmF,EAAcnF,WAR9B,SAUI,mCACMkJ,EAAUK,WACN,qBAAIjE,UAAU,eAAd,SACE4D,EAAUK,WAAWtE,KAAK,SAACuE,EAAuBf,GAAxB,OAAwC,8BAAwBe,GAAxB,aAAef,SAEnF,KAEJS,EAAUO,QAAQxE,KAAK,SAACyE,EAAcC,GAAf,OACrB,8BAAMD,EAAQzE,KAAI,SAACuE,EAAuBI,GAAxB,OACd,gCACMV,EAAUK,WACN,uBAAMjE,UAAU,QAAhB,SAA0B4D,EAAUK,WAAWK,KAC/C,KAEN,uBAAMtE,UAAU,QAAhB,SAA0BkE,MAL9B,aAAeG,EAAf,YAAuBC,oBAiBzCT,GAAetD,IAAOC,IAAV,m+DAEH,SAAA1B,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,cASlElD,GAIS,SAAAmH,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWG,aAKzDjD,EAKOD,GASF,SAAAmH,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,eAwBhE,SAAAiE,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWG,aAOlD/C,EAAaE,uBAKrBL,EAAiBA,EAejBA,GC/DjBiH,OAlE0D,SAAC,GAA6C,EAA5CkB,cAA4C,EAA7BD,aAA6B,EAAfG,UAAgB,IAC9GuE,EAAsB,SAAC7H,GACzB,IAAIkH,EAA2B,CAC3BK,WAAY,CAAC,UAAW,UAAW,WACnCE,QAAS,CACL,CAAC,sBAAuB,eAAgB,WACxC,CAAC,6BAA8B,kBAAmB,UAClD,CAAC,eAAgB,gBAAiB,WAClC,CAAC,iBAAkB,gBAAiB,MACpC,CAAC,+BAAgC,kBAAmB,UACpD,CAAC,+BAAgC,mBAAoB,WAI7D,OAAOzH,GACH,IAAK,QACDkH,EAAS,2BACFA,GADE,IAELE,iBAAiB,EACjBE,YAAY,EACZD,0BAA0B,IAElC,MACA,IAAK,oBACDH,EAAS,2BACFA,GADE,IAELE,iBAAiB,EACjBE,YAAY,EACZD,0BAA0B,IAEtC,MACI,IAAK,kBACDH,EAAS,2BACFA,GADE,IAELE,iBAAiB,EACjBE,YAAY,EACZD,0BAA0B,IAMtC,OAAOH,GAGX,OAAO,uBAAK5D,UAAU,kBAAf,UACH,wCACA,8CACA,eAAC,GAAD,CAAO4D,UAAWW,EAAoB,WACtC,wBACA,wBAEA,qEACA,eAAC,GAAD,CAAOX,UAAWW,EAAoB,uBACtC,wBACA,wBAEA,sFACA,wIACA,6MACA,eAAC,GAAD,CAAOX,UAAWW,EAAoB,qBACtC,wBACA,8BC3DO3F,OANgD,SAAC,GAAgB,EAAfoB,UAC7D,OAAO,sBAAKA,UAAU,YAAf,+BC8CIpB,OArCsD,SAAC,GAA4D,IAA3DkB,EAA0D,EAA1DA,cAAeD,EAA2C,EAA3CA,aAAc2E,EAA6B,EAA7BA,aAC1FzI,GADuH,EAAfiE,UAChG,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAc9D,UAEzB0I,EAAuB,WACzB,IAAIC,EAAQ,EAMZ,OALQ,OAAR3I,QAAQ,IAARA,KAAUS,aAAamI,SAAQ,SAACnI,GAC5BA,EAAaC,iBAAiBkI,SAAQ,SAACT,GAC/BA,EAAKtH,MAAM8H,UAGhBA,GAQX,OACI,gBAACE,GAAD,CACIlK,WAAYmF,EAAcnF,WAC1BsF,UAAW,CACP,eACGwE,EAAe,YAAc,GAC/BC,IAAyB,EAAI,UAAY,IAC5CpE,KAAK,IACPF,QAAUqE,OAA+CK,EAb3B,WAClC/E,EAAc/B,uBAAqB,OAAC8B,QAAD,IAACA,OAAD,EAACA,EAAcrF,wBAClDsF,EAAchC,4BAA0B,OAAC+B,QAAD,IAACA,OAAD,EAACA,EAAcrF,yBAIvD,UASI,sBAAKwF,UAAU,iBAAf,SAAkCyE,IAAyB,EAAI,gBAAkB,uBAC9EA,IAAyB,EACtB,sBAAKzE,UAAU,UAAf,SAA2ByE,IAAyB,GAAK,MAAQA,MACjE,WASZG,GAAsBrE,IAAOC,IAAV,srBAKX1I,EAAaI,aACZJ,EAAaI,aAUZP,EAIMC,EACGE,EAAakB,cACT,SAAA8F,GAAK,OAAIA,EAAMpE,WAAWM,eAOjC,SAAA8D,GAAK,OAAIgG,YAAOjN,EAAeiH,EAAMpE,WAAWI,cC7DvD8D,OAV0C,SAAC,GAA+B,IAA9BiB,EAA6B,EAA7BA,aAA6B,EAAfG,UACrE,OACI,eAAC+E,GAAD,CAAe/E,UAAU,SAAStF,WAAYmF,EAAcnF,WAA5D,SACI,sBAAKsF,UAAU,uBAAf,SACI,eAAC,GAAD,WASV+E,GAAgBxE,IAAOyE,OAAV,uNAEJlN,EAAaI,aACVP,EAAmBA,GACZ,SAAAmH,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWE,mBCmE3DgE,OA/EwC,SAAC,GAA8C,IAA7CkB,EAA4C,EAA5CA,cAAeD,EAA6B,EAA7BA,aAC9D3E,GAD2F,EAAf8E,UACnE,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAc3E,WAC1B+J,EAAS,OAAG/J,QAAH,IAAGA,OAAH,EAAGA,EAAWU,QAEvBsJ,EAAWlE,iBAAuB,MAElCmE,EAAiB,WACnBrF,EAAcnC,cAgClB,OAbAsD,qBAAU,WACN,GAAKiE,EAAShE,QAAS,CACnB,IAAMkE,EAAOF,EAAShE,QACjB+D,GACDG,EAAKtD,MAAMuD,QAAU,OACrBxH,YAAW,WAAQuH,EAAKlH,UAAUC,IAAI,UAAW,KAEjDiH,EAAKlH,UAAUE,OAAO,QACtBP,YAAW,WAAQuH,EAAKtD,MAAMuD,QAAU,SAAU,SAG3D,CAACJ,EAAWC,IAEJhK,EACP,gBAACoK,GAAD,CACItF,UAAW,CACP,eACC9E,EAAUG,KAAV,WAAqBH,EAAUG,MAAS,IAC3CgF,KAAK,IACP0C,IAAKmC,EACLxK,WAAYmF,EAAcnF,WAN9B,UAQI,sBAAKsF,UAAU,UACXG,QAAWjF,EAAUY,kBAAoBqJ,OAAiBN,IAE9D,uBAAK7E,UAAU,cAAf,UACI,uBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,QAAf,SACI,gCAAO9E,EAAUC,UAErB,yBAAQ6E,UAAU,QAAQG,QAASgF,EAAnC,SACI,uBAAMnF,UAAU,iBAAhB,wBAGR,sBAAKA,UAAU,gBAAf,SACI,uBAAMuF,wBAAyB,CAAEC,OAAQtK,EAAUE,aAEvD,uBAAK4E,UAAU,eAAf,UACQ9E,EAAUW,mBACR,eAAC,GAAD,CACEmE,UAAU,QACVG,QAzDO,WAC3BL,EAAcnC,aACd,IAAM8H,EAAM,OAAGvK,QAAH,IAAGA,OAAH,EAAGA,EAAWS,qBACrB8J,GAA4B,oBAAXA,GAClBA,KAmDc,SAGCvK,EAAUK,oBAAsBlB,GAAmBa,UAAWK,qBAC/D,KAEN,eAAC,GAAD,CAAQ4E,QArDO,WAC3BL,EAAcnC,aACd,IAAM8H,EAAM,OAAGvK,QAAH,IAAGA,OAAH,EAAGA,EAAWM,qBACrBiK,GAA4B,oBAAXA,GAClBA,KAiDQ,SAA2CvK,EAAUI,oBAAsBjB,GAAmBa,UAAWI,8BAIrH,QAOFgK,GAAe/E,IAAOC,IAAV,ymFAUQ5G,EAQE8L,YAAK,OAAQ,KAOR/N,EACZG,EAAaY,cACIf,EACpBA,EACOG,EAAakB,aAMdlB,EAAac,iBACfd,EAAac,kBACL,SAAAkG,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,cAK/D/C,EAAac,iBAAsBjB,EACzCG,EAAac,iBAAsBjB,EAQjDkC,EAMG/B,EAAac,iBASLhB,GAIQ,SAAAkH,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWG,aAOnElD,EAAeA,EAgBfA,GAEI,SAAAmH,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,cAU7E/C,EAAaa,oB,SCzMzBgN,GAA0B,CACnCxK,MAAO,OACPyK,SAAU9L,EAAOsC,MAAQ,iBACzByJ,YAAa/L,EAAOsC,MAAQ,yBAGnB0J,GAA6B,CACtC,CACIpJ,KAAMjF,EAASsO,KACfC,MAAO,OACPC,KAAM/L,EAAOC,KACb0C,KAAM,QAEV,CACIH,KAAMjF,EAASyO,UACfF,MAAO,YACPC,KAAM/L,EAAOuF,UACb5C,KAAM,aAEV,CACIH,KAAMjF,EAAS0O,MACfH,MAAO,WACPC,KAAM/L,EAAOkM,SACbvJ,KAAM,eAEV,CACImJ,MAAO,aACPnJ,KAAM,sBACNwJ,YAAa,CACT,CACI3J,KAAMjF,EAAS6O,UACfN,MAAO,YACPC,KAAM/L,EAAOqM,oBACb1J,KAAM,YAEV,CACIH,KAAMjF,EAAS+O,MACfR,MAAO,SACPC,KAAM/L,EAAOuM,gBACb5J,KAAM,gBAEV,CACIH,KAAMjF,EAASiP,KACfV,MAAO,gBACPC,KAAM,mBACNpJ,KAAM,kBAEV,CACIH,KAAMjF,EAASkP,MACfX,MAAO,QACPC,KAAM/L,EAAO0M,gBACb/J,KAAM,gBAIlB,CACIH,KAAMjF,EAASoP,IACfb,MAAO,MACPC,KAAM/L,EAAO2M,IACbhK,KAAM,QC+CC+B,OA5F0D,SAAC,GAAoD,IAAnDiB,EAAkD,EAAlDA,aAAyBiH,GAAyB,EAApC9G,UAAoC,EAAzB8G,qBAC1F3H,EAAW4H,cACXC,EAAahG,iBAAyB,MAGtCiG,EAAsB,SAACC,EAAcrK,GACvC,OAAO,uCAAMA,EACP,sBAAKmD,UAAU,OAAf,SAAsB,oBAAGA,UAAU,iBAAb,SAAgCnD,MACtD,KAFC,IAEO,uBAAMmD,UAAU,OAAhB,SAAyBkH,QAGrCC,EAAoB,SAAC7G,GACvB,IAAM8G,EAAI9G,EAAEmC,cACR2E,EAAElJ,UAAUwD,SAAS,QACrB0F,EAAElJ,UAAUE,OAAO,QAEnBgJ,EAAElJ,UAAUC,IAAI,SAalBkJ,EAAmB,SAACnD,GACtB,QAAKA,EAAKmC,aACcnC,EAAKmC,YAAYiB,QAAO,SAAAC,GAAI,OAAIA,EAAKtB,OAAS9G,EAASC,YACvDoI,OAAS,GAWrC,OANAvG,qBAAU,WACD6F,GAlBe,WAAO,IAAD,EACpBW,EAAY,UAAGT,EAAW9F,eAAd,aAAG,EAAoBM,uBAAuB,mBAChE,GAAKiG,EAAc,CAAC,IAAD,iBACCA,GADD,IACf,IAAI,EAAJ,qBAA8B,QACrBvJ,UAAUE,OAAO,QAFX,gCAiBfsJ,KAEL,CAACZ,EAAqB3H,IAGrB,eAACwI,GAAD,CACI3H,UAAU,YACVtF,WAAYmF,EAAcnF,WAC1BqI,IAAKiE,EAHT,SAKIlB,GAASnG,KAAI,SAACuE,EAAMjB,GAChB,OAAO,8BACCiB,EAAK+B,KACL,eAAC,IAAD,CACI2B,GAAI1D,EAAK+B,KACT9K,MAAO+I,EAAK8B,MACZ6B,gBAAgB,UAChBC,OAAK,EAJT,SAKGb,EAAoB/C,EAAK8B,MAAO9B,EAAKrH,QAEtCqH,EAAKmC,aAAenC,EAAKmC,YAAYmB,OAAS,EAC5C,gBAACO,GAAD,CACI/H,UAAW,CACP,kBACGqH,EAAiBnD,GAAQ,WAAa,IAC3C7D,KAAK,IACP3F,WAAYmF,EAAcnF,WAC1ByF,QAASgH,EANb,UAQI,sBAAKnH,UAAU,aAAf,SAA8BiH,EAAoB/C,EAAK8B,MAAO9B,EAAKrH,QACnE,8BACIqH,EAAKmC,YAAY1G,KAAI,SAACuE,EAAM8D,GACxB,OAAO,8BACC9D,EAAK+B,KACL,eAAC,IAAD,CACI2B,GAAI1D,EAAK+B,KACT9K,MAAO+I,EAAK8B,MACZ6B,gBAAgB,UAChBC,OAAK,EAJT,SAKGb,EAAoB/C,EAAK8B,MAAO9B,EAAKrH,QACxC,MARQoG,EAAQ,IAAM+E,WAa1C,MAlCI/E,WA4C1BgF,GAAiB,SAACvN,GAAD,oEAGR5C,EAAaO,eAHL,4BAIPV,EAJO,4GAQT8I,YAAQ5I,EAAe6C,EAAWC,cARzB,mKAeEhD,EAfF,mEAiBIiC,EAjBJ,yDAqBDhC,EArBC,uCAsBKgC,EAtBL,gEA0BM6G,YAAQ5I,EAAe6C,EAAWG,WA1BxC,eA8BjB8M,GAAwBpH,IAAOgD,GAAV,0/BAUZ,SAAAzE,GAAK,OAAImJ,GAAenJ,EAAMpE,eAKnB,SAAAoE,GAAK,OAAIA,EAAMpE,WAAWC,gBAItB,SAAAmE,GAAK,OAAIA,EAAMpE,WAAWO,eAU1BnD,EAAaO,eAgBNV,GAW/BoQ,GAA2BxH,IAAOC,IAAV,g9EAEnB,SAAA1B,GAAK,OAAImJ,GAAenJ,EAAMpE,cASnB5C,EAAaoQ,kBACZpQ,EAAaO,eACNV,EAEJC,EAcQgC,EAKDjC,EAIIC,EAKJA,EAcNE,EAAaQ,0BAMlB,SAAAwG,GAAK,OAAIA,EAAMpE,WAAWC,gBAItB,SAAAmE,GAAK,OAAIA,EAAMpE,WAAWO,eASzBnD,EAAaQ,yBAOdR,EAAaO,eAwBNV,EAcFG,EAAaQ,0BCvR7BsG,OAxBwD,SAAC,GAA6C,EAA5CkB,cAA6C,IAA9BD,EAA6B,EAA7BA,aAC9E9D,GAD2G,EAAfiE,UAC3D,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAc9D,UAExD,OACI,eAACoM,GAAD,CACInI,UAAU,iBACVtF,WAAYmF,EAAcnF,WAF9B,SAIQqB,EACA,uBAAKiE,UAAU,cAAf,UACI,sBAAKA,UAAU,QAAQ8B,MAAO,CAAEsG,gBAAgB,OAAD,OAASrM,EAASI,UAAlB,QAC/C,uBAAK6D,UAAU,OAAf,UACI,sBAAKA,UAAU,eAAf,SAA+BjE,EAASE,cACxC,sBAAK+D,UAAU,OAAf,SAAuBjE,EAASO,QAChC,sBAAK0D,UAAU,QAAf,SAAuB,oBAAGqI,KAAI,iBAAYtM,EAASG,OAA5B,SAAsCH,EAASG,UACtE,sBAAK8D,UAAU,OAAf,SAAuBjE,EAASM,kBAGtC,UAQZ8L,GAAuB5H,IAAOC,IAAV,y9EAEX1I,EAAaU,oBACZb,GACM,SAAAmH,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,cAG1EjB,EAOI9B,EAAaU,oBAA+Bb,EAC3CG,EAAaU,oBAA+Bb,GAC7C,SAAAmH,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWG,aAC/C/C,EAAakB,aACXY,EAII9B,EAAaU,oBAA2Bb,EAE1CiC,EASHhC,EAKZiC,EACkBD,EAINhC,EACMgC,EAILjC,EACDC,EAIAA,EAUXE,EAAaO,eAKNP,EAAaO,eACZP,EAAaO,eAiBrBP,EAAaU,oBACZb,EAIWG,EAAaU,oBAA+Bb,EAC3CG,EAAaU,oBAA+Bb,EAIrCG,EAAaU,oBAA2Bb,EAG7CC,EAIAA,GCvHnBgH,OAX0C,SAAC,GAA+B,IAA9BiB,EAA6B,EAA7BA,aAA6B,EAAfG,UACrE,OACI,gBAACsI,GAAD,CAAetI,UAAU,SAAStF,WAAYmF,EAAcnF,WAA5D,UACI,sBAAKsF,UAAU,OAAf,SACI,uBAAMA,UAAU,iBAAhB,yBAEJ,uBAAKA,UAAU,OAAf,WAAyB,IAAIuI,MAAQC,cAArC,IAAuD7C,GAAQxK,eAQrEmN,GAAgB/H,IAAOkI,OAAV,qtCAGJ3Q,EAAaK,cACT,SAAA2G,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,cAY3E/C,EAAaK,aACNR,EAECiC,EAGDhC,EACWgC,EAMfhC,EAGOgC,EAMP9B,EAAaO,eAILT,EAYAD,EAGAC,GC5BfgH,OArC8C,SAAC,GAAwD,IAAvDiB,EAAsD,EAAtDA,aAAc6I,EAAwC,EAAxCA,WAAYC,EAA4B,EAA5BA,YAA4B,KAAf3I,UACpD4I,oBAAS,IAD0D,oBAC1GC,EAD0G,KAC5FC,EAD4F,KASjH,OANA7H,qBAAU,WACD4H,GACDC,GAAsB,KAE3B,CAACD,IAGA,gBAACE,GAAD,CAAiB/I,UAAU,YAAYtF,WAAYmF,EAAcnF,WAAjE,UACI,uBAAKsF,UAAU,OACXgJ,aAAc,kBAAML,GAAY,IAChCM,aAAc,WACVN,GAAY,GACZG,GAAsB,IAJ9B,UAOI,uBAAK9I,UAAU,aAAf,UACI,sBAAKA,UAAU,OAAO8B,MAAO,CAAEsG,gBAAgB,OAAD,OAASzC,GAAQC,SAAjB,QAC9C,sBAAK5F,UAAU,QAAf,SAAyB2F,GAAQxK,WAErC,eAAC,GAAD,IACA,sBAAK6E,UAAU,eAAf,SACI,eAAC,GAAD,CAAgB8G,oBAAqB+B,MAGzC,eAAC,GAAD,OAEJ,uBAAK7I,UAAU,UAAUG,QAASuI,EAAlC,UACI,uBAAM1I,UAAU,uBAAhB,2BACA,uBAAMA,UAAU,sBAAhB,mCASV+I,GAAkBxI,IAAOC,IAAV,m6EAKP1I,EAAaM,UACTT,EACOiC,EAUN9B,EAAaS,iBACH,SAAAuG,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWC,gBAKxD7C,EAAaS,gBACZT,EAAaS,iBACT,SAAAuG,GAAK,OAAIA,EAAMpE,WAAWC,eACxBhD,EACWiC,EAKdhC,EACKgC,EAMA9B,EAAaS,gBAAuBT,EAAaU,oBAA2BV,EAAaK,aAE1FyB,EASZjC,GAQI,SAAAmH,GAAK,OAAIgG,YAAOjN,EAAeiH,EAAMpE,WAAWC,gBAUrC+K,YAAK,OAAQ,IAM5B5N,EAAaO,eAcIP,EAAaS,gBAAuBT,EAAaO,eAAsBP,EAAaK,aAiBrGL,EAAaM,UAIET,EAIHC,EAKKE,EAAaS,gBAAuBT,EAAaU,oBAA2BV,EAAaK,cCjH7GyG,OAnD8D,SAAC,GAIvE,IAHHkB,EAGE,EAHFA,cACAD,EAEE,EAFFA,aACAqJ,EACE,EADFA,qBAGI/N,EAMA+N,EANA/N,MACAwB,EAKAuM,EALAvM,aACAC,EAIAsM,EAJAtM,KACAP,EAGA6M,EAHA7M,UACAF,EAEA+M,EAFA/M,UACAU,EACAqM,EADArM,KAQJ,OACI,gBAACsM,GAAD,CACIzO,WAAYmF,EAAcnF,WAC1BsF,UAAW,CACP,oBACGpD,EAAO,QAAU,IACtByD,KAAK,IALX,UAMI,gBAAC,IAAD,CACIL,UAAU,oBACV4H,GAAIjL,EACJwD,QAfsB,WAC9BL,EAAc/B,sBAAqB,GACnC+B,EAAchC,2BAA0B,IAUpC,UAKI,sBAAKkC,UAAU,eAAf,SACQnD,GAAiB,KAATA,EACN,uBAAMmD,UAAU,iBAAhB,SAAkCnD,IAClC,uBAAMmD,UAAU,QAAQ8B,MAAO,CAAEsG,gBAAgB,OAAD,OAASjM,EAAT,UAG1D,uBAAK6D,UAAU,OAAf,UACI,sBAAKA,UAAU,QAAf,SAAyB7E,IACzB,sBAAK6E,UAAU,OAAf,SAAwB3D,UAGhC,sBAAK2D,UAAU,cAAf,SACI,kCACI,uBAAMA,UAAU,iBAAhB,iCAUdmJ,GAA0B5I,IAAOC,IAAV,irEAGP,SAAA1B,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,eAUrE,SAAAiE,GAAK,OAAIA,EAAMpE,WAAWM,cAa9BrD,GAQO,SAAAmH,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWG,aAC/C/C,EAAakB,aASblB,EAAakB,cACT,SAAA8F,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWE,kBAO1CjD,EACpBA,EAGKC,GAGH,SAAAkH,GAAK,OAAIgG,YAAOjN,EAAeiH,EAAMpE,WAAWE,kBAI5CjD,EACDC,GACH,SAAAkH,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWG,aAkB9CjD,GC3FdgH,OAzCwE,SAAC,GAA8C,IAAD,EAA5CkB,EAA4C,EAA5CA,cAAeD,EAA6B,EAA7BA,aAC9FuJ,GAD2H,EAAfpJ,UAC5F,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAc9D,gBAAjB,aAAG,EAAwBS,cAC3ChC,EAAqB,OAAGqF,QAAH,IAAGA,OAAH,EAAGA,EAAcrF,sBAO5C,OAAW4O,EACP,gBAACC,GAAD,CACI3O,WAAYmF,EAAcnF,WAC1BsF,UAAW,CACP,0BACGxF,EAAwB,QAAU,IACvC6F,KAAK,IALX,UAMI,sBAAKL,UAAU,UAAUG,QAZD,WAC5BL,EAAc/B,sBAAqB,GACnC+B,EAAchC,2BAA0B,IAUpC,SACI,uBAAMkC,UAAU,uBAAhB,6BAGJ,uBAAKA,UAAU,iBAAf,UACI,uBAAKA,UAAU,cAAf,UACI,sBAAKA,UAAU,OAAf,SACI,eAAC,GAAD,CAAcwE,cAAc,MAEhC,sBAAKxE,UAAU,OAAf,6BAEFoJ,EAAiBzJ,KAAI,SAAC2J,EAA0CrG,GAA3C,OACnB,iCACI,sBAAKjD,UAAU,cAAf,SAA8BsJ,EAAkBnO,QAC9CmO,EAAkB7M,iBAAiBkD,KAAI,SAAC4J,EAAoCvB,GAArC,OACrC,eAAC,GAAD,CAA+CkB,qBAAwBK,GAAvE,YAA4BtG,EAA5B,YAAqC+E,SAH7C,YAAe/E,aASzB,QAOJoG,GAA+B9I,IAAOC,IAAV,wsDAKb7I,EAEGiC,EAQNjC,GAQI,SAAAmH,GAAK,OAAIgG,YAAOjN,EAAeiH,EAAMpE,WAAWC,gBAMrD7C,EAAaiB,uBAORjB,EAAaI,aAKVJ,EAAaI,aACZJ,EAAaI,aAIFJ,EAAaI,aAAkBP,EAQ1CA,GACI,SAAAmH,GAAK,OAAIhH,EAAamB,aAAawH,YAAQ5I,EAAeiH,EAAMpE,WAAWG,eAE9E,SAAAiE,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWG,aAO3D/C,EAAaiB,uBAOG2M,YAAK,OAAQ,KCnGxC8D,G,4MACFC,aAAgD1J,IAAM2J,Y,EACtDC,YAAsB,E,EACtBC,gBAAuC,IAAIC,YAAY,YAAa,CAAEC,OAAQ,gB,EAU9EC,sBAAwB,WACpBC,aAAa,EAAKL,aAClB,EAAKA,YAAc/G,OAAO/E,YAAW,WACjC+E,OAAOqH,cAAc,EAAKL,mBAC3B,M,EAGPM,sBAAwB,SAACC,GAAD,OAAyD,IAAIN,YAAY,mBAAoB,CACjHC,OAAQ,CAAEK,e,EAGdC,sBAAwB,WACpB,IAAMC,EAAe,EAAKZ,aAAavI,QACpCmJ,IACIA,EAAanM,UAAUwD,SAAS,eAC/B2I,EAAanM,UAAUE,OAAO,cAC9BwE,OAAOqH,cAAc,EAAKC,uBAAsB,MAEhDG,EAAanM,UAAUC,IAAI,cAC3ByE,OAAOqH,cAAc,EAAKC,uBAAsB,O,EAK5DI,uBAAyB,SAACC,GACtB,IAAMF,EAAe,EAAKZ,aAAavI,QACpCmJ,GACIA,EAAanM,UAAUwD,SAAS,gBAC5B6I,EAAMF,EAAanM,UAAUC,IAAI,QAC/BkM,EAAanM,UAAUE,OAAO,U,uDArC/C,WACIwE,OAAOC,iBAAiB,SAAU5I,KAAK8P,yB,kCAG3C,WACInH,OAAO4H,oBAAoB,SAAUvQ,KAAK8P,yB,oBAqC9C,WAAU,IACElK,EAAiB5F,KAAK6E,MAAtBe,aAER,OACI,eAAC,IAAD,UACI,eAAC4K,GAAD,UACI,gBAACC,GAAD,CACI1K,UAAW,CACP,kBACC,OAACH,QAAD,IAACA,OAAD,EAACA,EAActF,YAA0B,GAAb,YAC/B8F,KAAK,IACP0C,IAAK9I,KAAKwP,aACV/O,WAAYmF,EAAcnF,WAN9B,WAQO,OAACmF,QAAD,IAACA,OAAD,EAACA,EAActF,YAAa,uCAC3B,eAAC,GAAD,IAEA,sBAAKyF,UAAU,UAAf,SACI,gBAAC,IAAD,WACI,eAAC,IAAD,CAAO8H,OAAK,EAAC7B,KAAM/L,EAAOC,KAAMwQ,UAAWzE,KAC3C,eAAC,IAAD,CAAOD,KAAM,WAAY0E,UAAWC,UAI5C,eAAC,GAAD,CACI5K,UAAU,SACV0I,WAAYzO,KAAKmQ,sBACjBzB,YAAa1O,KAAKqQ,4BAGtB,gBAAC,IAAD,WACI,eAAC,IAAD,CAAOxC,OAAK,EAAC7B,KAAM/L,EAAOC,KAAMwQ,UAAWzE,KAC3C,eAAC,IAAD,CAAOD,KAAM,WAAY0E,UAAWC,QAG5C,eAAC,GAAD,IACA,eAAC,GAAD,e,GAnFN7K,IAAMlB,WA4FlBgM,G,4JACF,WACI,OAAO,qCAAG5Q,KAAK6E,MAAMmB,e,GAFKF,IAAMlB,WAKlC4L,GAAkBK,YAAWD,IAG7BD,GAA2C,SAAC,GAAD,EAAEG,MAAF,OAAc,qCAC3D,gBAAC,IAAD,WACI,eAAC,IAAD,CAAO9E,KAAM/L,EAAOmF,OAAQsL,UAAWK,KAMvC,eAAC,IAAD,CAAO/E,KAAM/L,EAAOuF,UAAWkL,UAAWzE,KAC1C,eAAC,IAAD,CAAOD,KAAM/L,EAAOqM,oBAAqBoE,UAAWM,KACpD,eAAC,IAAD,CAAOhF,KAAM/L,EAAOuM,gBAAiBkE,UAAWO,KAChD,eAAC,IAAD,CAAOjF,KAAM/L,EAAO0M,gBAAiB+D,UAAWQ,WAQzCvM,MAAY4K,IAGrBkB,GAAmBnK,IAAOC,IAAV,q/BAED1I,EAAaM,UACFwB,EAOP9B,EAAaO,eAInBV,EAAeA,GAKhB,SAAAmH,GAAK,OAAIA,EAAMpE,WAAWC,gBAS1B,SAAAmE,GAAK,OAAI2B,YAAQ5I,EAAeiH,EAAMpE,WAAWC,gBAc9C/C,EASWD,EAGQG,EAAaE,wBCzMtCoT,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCGRQ,GAAcC,QACa,cAA7BlJ,OAAOzD,SAAS4M,UAEa,UAA7BnJ,OAAOzD,SAAS4M,UAEhBnJ,OAAOzD,SAAS4M,SAAShB,MACrB,2DA8CR,SAASiB,GAAgBC,EAAeC,GACpCC,UAAUC,cACLC,SAASJ,GACTV,MAAK,SAAAe,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WAC7BjR,QAAQC,IAAI,0BAA2B8Q,EAAiBrP,OACzB,cAA3BqP,EAAiBrP,QACbgP,UAAUC,cAAcO,YAIxBlR,QAAQC,IACJ,iHAKAwQ,GAAUA,EAAOU,UACjBV,EAAOU,SAASN,KAMpB7Q,QAAQC,IAAI,sCAGRwQ,GAAUA,EAAOW,WACjBX,EAAOW,UAAUP,WAOxCQ,OAAM,SAAAC,GACHtR,QAAQsR,MAAM,4CAA6CA,MClGvEC,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFlP,SAASmP,eAAe,SAM1B/B,KDUO,SAAkBc,GACrB,GAA6C,kBAAmBC,UAAW,CAMvE,GAJkB,IAAIiB,IAClBpT,wBACA4I,OAAOzD,SAASkJ,MAENgF,SAAWzK,OAAOzD,SAASkO,OAIrC,OAGJzK,OAAOC,iBAAiB,QAAQ,WAC5B,IAAMoJ,EAAK,UAAMjS,wBAAN,sBAEP6R,KAiEhB,SAAiCI,EAAeC,GAE5CzQ,QAAQC,IAAI,8CACZ4R,MAAMrB,EAAO,CACTsB,QAAS,CAAE,iBAAkB,YAE5BhC,MAAK,SAAAiC,GAEF,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEjB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CzB,UAAUC,cAAcyB,MAAMtC,MAAK,SAAAe,GAC/BA,EAAawB,aAAavC,MAAK,WAC3B3I,OAAOzD,SAAS4O,eAKxB/B,GAAgBC,EAAOC,MAG9BY,OAAM,WACHrR,QAAQC,IACJ,oEAzFAsS,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAMtC,MAAK,WAC/B9P,QAAQC,IACJ,iHAMRsQ,GAAgBC,EAAOC,OCxCvCE,K","file":"static/js/main.704e340d.chunk.js","sourcesContent":["export type GeneralObjType = {\n    [key: string]: any,\n}\n\nexport type StyledColorProps = {\n    readonly themeColor: ThemeColorType;\n};\n  \nexport enum PageType {\n    Home = 'home',\n    Dashboard = 'dashboard',\n    About = 'about',\n    Form = 'form',\n    Table = 'table',\n    Accordion = 'accordion',\n    Alert = 'alert',\n    FAQ = 'faq',\n}\n\nexport type PageObjectType = {\n    label: string,\n    type?: string,\n    path?: string,\n    icon?: string,\n    subMenuList?: PageObjectType[],\n}\n\nexport enum RoleType {\n    SuperAdmin = 'SuperAdmin',\n    Administrator = 'Administrator',\n    Editor = 'Editor',\n    Viewer = 'Viewer',\n}\n\nexport type ThemeColorType = {\n    primaryColor: string,\n    secondaryColor: string,\n    grayColor?: string,\n    infoColor?: string,\n    successColor?: string,\n    dangerColor?: string,\n    warningColor?: string,\n}\n\nexport type UserInfoType = {\n    username: string,\n    displayName: string,\n    email: string,\n    imagePath: string,\n    createdAt: string,\n    roles: RoleType,\n    notification: NotificationGroupType[],\n}\n\nexport type NotificationType = {\n    type: string,\n    title: string,\n    redirectPath: string,\n    read: boolean,\n    createdAt: string,\n    imagePath?: string,\n    icon?: string,\n}\n\nexport type NotificationGroupType = {\n    title: string,\n    notificationList: NotificationType[],\n}\n\nexport type ModalType = {\n    title: string,\n    content: string,    \n    isShown: boolean,\n    size?: string,    \n    positiveButtonText?: String,\n    negativeButtonText?: String,\n    positiveButtonAction?: () => void,\n    negativeButtonAction?: () => void,\n    showNegativeButton?: boolean,\n    allowOverlayClose?: boolean,\n}\n\nexport type AccordionListType = {\n    title: string,\n    children: React.ReactNode,\n    titleIcon?: string,\n    maxContentHeight?: number,\n    onClick?: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\n}\n\nexport type TableDataType = {\n    headerData?: (string | number)[],\n    rowData: any[],\n    title?: string,\n    highlightAltRow?: boolean,\n    cellNoWrap?: boolean,\n    columnRelayoutResponsive?: boolean,\n}\n\nexport type GlobalStateInitialType = {\n    curPage: string,\n    isLoggedIn: boolean,\n    lockPageScroll: boolean,\n    showNotificationPanel: boolean,\n    themeColor: ThemeColorType,\n    modalData?: ModalType,\n    userInfo?: UserInfoType,\n    // shareInfo: ShareInfoType,\n    // showSnackBar: boolean,\n    // snackBarMessage: string,\n    // snackBarHasCTA: boolean,\n    // snackBarCTAButtonLabel: string,\n    // snackBarCTAClickHandler: () => void,\n    // snackBarCloseHandler: () => void,\n}\n\nexport type GlobalActionType = {\n    updateCurPage: (val: PageType) => void,\n    updateLoggedSession: (val: boolean) => void,\n    updateThemeColor: (data: ThemeColorType) => void,\n    updateUserInfo: (data: UserInfoType) => void,\n    openModal: (info: ModalType) => void,\n    closeModal: () => void,\n    showHideNotificationPanel: (data: boolean) => void,\n    updateLockPageScroll: (data: boolean) => void,\n    // updateSnackBar: (info: SnackBarInfoType) => void,\n    // updateUserInfoByKey: (key: string, info: any) => void,\n    // updateShareInfo: (info: ShareInfoType) => void,\n}","import { GeneralObjType } from \"../models\";\n\nconst gaps: GeneralObjType = {\n    XSmall: '0.3125rem', // 5px\n    Small: '0.625rem', // 10px\n    Common: '1rem', // 16px\n    Large: '2rem', // 32px\n};\n\nconst fontSizes: GeneralObjType = {\n    XSmall: '0.625rem', // 10px\n    Small: '0.75rem', // 12px\n    Common: '0.875rem', // 14px\n    Large: '1rem', // 16px\n    XLarge: '1.25rem', // 20px\n};\n\nconst colorRange: GeneralObjType = {\n    L1: '0.05',\n    L2: '0.1',\n    L3: '0.2',\n    L4: '0.5',\n    L5: '0.7',\n}\n\nconst elementSizes: {[key: string]: any}  = {\n    MediaScreenSmallWidth: '400px',\n    MediaScreenMediumWidth: '800px',\n    MediaScreenLargeWidth: '1000px',\n\n    HeaderHeight: '3rem',\n    FooterHeight: '2rem',\n    MenuWidth: '15rem',\n    MenuCloseWidth: '3rem',\n    SubMenuExpandedMaxHeight: '300px',\n    \n    SiteTitleHeight: '3rem',\n    ProfileWidgetHeight: '5rem',\n    \n    ButtonHeight: '2rem',\n    ModalMaxWidth: '25rem',\n    ModalLargeMaxWidth: '45rem',\n    ModalTitleHeight: '2.5rem',\n    AccordionMaxWidth: '25rem',\n    AccordionTitleHeight: '2.5rem',\n    NotificationPanelWidth: '15rem',\n    \n    BorderRadius: '4px',\n    Border1Pixel: (color: string): string => `1px solid ${color}`,\n\n    InputAreaHeight: '3rem',\n    PlayerCountInputWidth: '9rem',\n    PlayerCountButtonWidth: '5rem',\n    PlayerNameWidth: '6.5rem',\n    CardHeight: '3rem',\n    CardWidth: '2rem',\n    ToggleHeight: '2rem',\n    ToggleWidth: '7.5rem',\n    ToggleBorderWidth: '3px',\n\n};\n\nconst animations: GeneralObjType = {\n    Transition: '200ms',\n};\n\nconst styleGroup: GeneralObjType = {\n    TextOverflow: `\n        white-space: nowrap;\n        text-overflow: ellipsis;\n        overflow: hidden;\n    `,\n};\n\n\nexport {\n    gaps,\n    fontSizes,\n    colorRange,\n    elementSizes,\n    animations,\n    styleGroup,\n}","import { GeneralObjType } from \"../models\";\n\nconst assets: GeneralObjType = {\n    ROOT: process.env.PUBLIC_URL,\n\n    get IMAGE() { return this.ROOT + '/images' },\n}\n\nconst routes: GeneralObjType = {\n    HOME: '/',\n    \n    get SIGNIN() { return this.HOME + 'signin' },\n    get DASHBOARD() { return this.HOME + 'dashboard' },\n    get ABOUT_US() { return this.HOME + 'about-us' },\n    get FAQ() { return this.HOME + 'faq' },\n    \n    get COMPONENTS() { return this.HOME + 'components/' },\n    get COMPONENT_TABLE() { return this.COMPONENTS + 'table' },\n    get COMPONENT_ACCORDION() { return this.COMPONENTS + 'accordion' },\n    get COMPONENT_ALERT() { return this.COMPONENTS + 'alerts' },\n    \n    // get ADD_CONTACT() { return this.HOME + 'add-contact' },\n    // get CONTACT_DETAILS() { return this.HOME + 'contact-details' },\n    // get BRAND_DETAILS() { return this.HOME + 'brand-details' },\n    // get GIFT_DETAILS() { return this.HOME + 'gift-details' },\n    // get SHARE_GIFT() { return this.HOME + 'share-gift' },\n    // get PROFILE() { return this.HOME + 'profile' },\n    // get THANK_YOU() { return this.HOME + 'thank-you' },\n};\n\nexport {\n    routes,\n    assets,\n}","// import flyd from \"flyd\";\nimport { assets } from \"../constants/routes\";\nimport { \n    GlobalActionType, \n    GlobalStateInitialType, \n    ModalType, \n    PageType, \n    RoleType, \n    ThemeColorType, \n    UserInfoType\n} from \"../models\";\n\n\nexport const GlobalInitialState: GlobalStateInitialType = {\n    curPage: '',\n    isLoggedIn: true,\n    showNotificationPanel: false,\n    lockPageScroll: false,\n    themeColor: {\n        primaryColor: '#136C5D',\n        secondaryColor: '#999591',\n        grayColor: '#323232',\n        infoColor: '#2A99D6',\n        successColor: '#00DB10',\n        dangerColor: '#FF5E00',\n        warningColor: '#F5A41E',\n    },\n    modalData: {\n        title: 'Message',\n        content: 'Modal Content',    \n        size: '',\n        positiveButtonText: 'OK',\n        negativeButtonText: 'Cancel',\n        positiveButtonAction: () => console.log('OK'),\n        negativeButtonAction: () => console.log('Cancel'),\n        isShown: false,\n        showNegativeButton: false,\n        allowOverlayClose: false,\n    },\n    userInfo: {\n        username: 'admin',\n        displayName: 'Patrick Lee Jun Ming',\n        email: 'patrick.lee@fiix.com',\n        imagePath: assets.IMAGE + '/profiles/profile.jpg',\n        createdAt: '20200809',\n        roles: RoleType.Administrator,\n        notification: [{\n            title: 'Today',\n            notificationList: [{\n                type: 'friend',\n                title: 'Toni Leigh has added you.',\n                imagePath: assets.IMAGE + '/profiles/profile2.jpg',\n                redirectPath: '/form',\n                read: false,\n                createdAt: '20200809',\n            }, {\n                type: 'message',\n                title: 'Pierre Ferry messaged you.',\n                imagePath: assets.IMAGE + '/profiles/profile3.jpg',\n                redirectPath: '/components/alerts',\n                read: false,\n                createdAt: '20200809',\n            }, {\n                type: 'calendar',\n                title: 'NWEB-172 issue will be due tomorrow.',\n                icon: 'date_range',\n                redirectPath: '/faq',\n                read: true,\n                createdAt: '20200809',\n            }],\n        }, {\n            title: 'Others',\n            notificationList: [{\n                type: 'message',\n                title: 'Chin Ming messaged you.',\n                imagePath: assets.IMAGE + '/profiles/profile4.jpg',\n                redirectPath: '/',\n                read: false,\n                createdAt: '20200809',\n            }, {\n                type: 'friend',\n                title: 'Ahmad Shah has added you.',\n                imagePath: assets.IMAGE + '/profiles/profile5.jpg',\n                redirectPath: '/',\n                read: false,\n                createdAt: '20200809',\n            }, {\n                type: 'message',\n                title: 'Valerie Goh messaged you.',\n                imagePath: assets.IMAGE + '/profiles/profile6.jpg',\n                redirectPath: '/',\n                read: false,\n                createdAt: '20200809',\n            }, {\n                type: 'calendar',\n                title: 'NWEB-168 issue will be due tomorrow.',\n                icon: 'date_range',\n                redirectPath: '/',\n                read: true,\n                createdAt: '20200809',\n            }],\n        }],\n    },\n};\n\nconst globalState: any = {\n    GlobalInitialState,\n    Actions: (update: flyd.Stream<unknown>): GlobalActionType => {\n        return {\n            updateThemeColor: (data: ThemeColorType) => {\n                update((state: GlobalStateInitialType) => {\n                    const newThemeColor: ThemeColorType = {\n                        ...state.themeColor,\n                        ...data,\n                    };\n                    state.themeColor = newThemeColor;\n                    return state;\n                });\n            },\n            updateLoggedSession: (val: boolean) => {\n                update((state: GlobalStateInitialType) => {\n                    state.isLoggedIn = val;\n                    return state;\n                });\n            },\n            updateCurPage: (val: PageType) => {\n                update((state: GlobalStateInitialType) => {\n                    state.curPage = val;\n                    return state;\n                });\n            },\n            updateUserInfo: (info: UserInfoType) => {\n                update((state: GlobalStateInitialType) => {\n                    state.userInfo = info;\n                    return state;\n                });\n            },\n            openModal: (data: ModalType) => {\n                update((state: GlobalStateInitialType) => {\n                    state.modalData = data;\n                    return state;\n                });\n            },\n            closeModal: () => {\n                update((state: GlobalStateInitialType) => {\n                    const newModalData = {\n                        ...state.modalData!, \n                        isShown: false,\n                    };\n                    state.modalData = newModalData;\n                    return state;\n                });\n                setTimeout(() => {\n                    update((state: GlobalStateInitialType) => {\n                        state.modalData = GlobalInitialState.modalData;\n                        return state;\n                    });    \n                }, 200);\n            },\n            showHideNotificationPanel: (data: boolean) => {\n                update((state: GlobalStateInitialType) => {\n                    state.showNotificationPanel = data;\n                    return state;\n                });\n            },\n            updateLockPageScroll: (data: boolean) => {\n                if(!!data) {\n                    document.body.classList.add('overflow-hidden');\n                } else {\n                    document.body.classList.remove('overflow-hidden');\n                }\n\n                update((state: GlobalStateInitialType) => {\n                    state.lockPageScroll = data;\n                    return state;\n                });\n            },\n\n            /*\n            updateSnackBar: (info: SnackBarInfoType) => {\n                update((state: GlobalStateInitialType) => {\n                    state.showSnackBar = info.isShown;\n                    state.snackBarMessage = !!info.isShown ? info.message : '';\n                    state.snackBarHasCTA = !!info.hasCTA;\n                    state.snackBarCTAButtonLabel = !!info.CTAButtonLabel ? info.CTAButtonLabel : '';\n                    state.snackBarCTAClickHandler = !!info.CTAClickHandler ? info.CTAClickHandler : () => null;\n                    state.snackBarCloseHandler= !!info.closeHandler ? info.closeHandler : () => null;\n\n                    return state;\n                });\n            },\n            updateUserInfoByKey: (key: string, info: any) => {\n                update((state: GlobalStateInitialType) => {\n                    const newState = {\n                        ...state.userInfo,\n                        [key]: info,\n                    };\n                    state.userInfo = newState;\n                    return state;\n                });\n            },\n            updateShareInfo: (info: ShareInfoType) => {\n                update((state: GlobalStateInitialType) => {\n                    state.shareInfo = info;\n                    return state;\n                });\n            }\n            */\n        }\n    }\n};\n\nexport default globalState;","import React from \"react\";\nimport flyd from \"flyd\";\nimport merge from \"mergerino\";\nimport { GlobalStateInitialType } from \"../../models\";\nimport globalState from \"../../services/states\";\nimport { routes } from \"../../constants/routes\";\n\n\nconst update: flyd.Stream<unknown> = flyd.stream();\nconst states = flyd.scan(\n    (state: GlobalStateInitialType, patch: any) => merge(state, patch),\n    globalState.GlobalInitialState,\n    update\n);\nconst actions = globalState.Actions(update);\n\nexport interface WithMeiosisProps {\n    // globalStates: flyd.Stream<GlobalStateInitialType>,\n    globalStates?: GlobalStateInitialType,\n    globalActions?: any,\n}\n\ntype AnyProps = {\n    [key: string]: any\n}\n\nconst withMeiosis = <P extends WithMeiosisProps>(Component: React.ComponentType<P>) => {\n    // class WithMeiosis extends React.Component<Subtract<P, WithMeiosisProps>, GlobalStateInitialType> {\n    class WithMeiosis extends React.Component<P & WithMeiosisProps & AnyProps, GlobalStateInitialType> {\n        private _isMounted: boolean;\n        private unlisten: any;\n\n        constructor(props: P) {\n            super(props);\n            this.state = states();\n\n            this._isMounted = false;\n        }\n\n        componentDidMount() {\n            this._isMounted = true;\n\n            this.checkUserInfo();\n\n            states.map((state: GlobalStateInitialType) => this._isMounted && this.setState(state));\n\n            // if(pageComponentList.indexOf(Component.name) > -1) { // NOTE: only check session if component is page\n            //     apiService.ApiCall.HasSession({\n            //         onSuccess: this.onCheckSessionSuccess,\n            //         onError: this.onCheckSessionFailed,\n            //     });\n            // }\n        }\n\n        componentWillUnmount() {\n            this._isMounted = false;\n        }\n\n        // onCheckSessionSuccess = () => actions.updateLoggedSession(true);\n\n        // onCheckSessionFailed = () => {\n        //     actions.updateLoggedSession(false);\n        //     this.redirectToSignIn();\n        // };\n\n        redirectToSignIn = () => {\n            const { history } = this.props;\n            if( !!history ) {\n                if( history.location.pathname !== routes.HOME ||\n                    history.location.pathname !== routes.SIGNIN ||\n                    history.location.pathname !== routes.SIGNUP\n                ) {\n                    history.replace({ pathname: routes.SIGNIN });\n                }\n            } \n            \n        };\n\n        redirectToPrivatePage = () => {\n            const { history } = this.props;\n            if( !!history ) {\n                if( history.location.pathname === routes.HOME ||\n                    history.location.pathname === routes.SIGNIN ||\n                    history.location.pathname === routes.SIGNUP\n                ) {\n                    history.replace({ pathname: routes.DASHBOARD });\n                }\n            }\n        };\n\n        checkUserInfo = () => {\n            const { isLoggedIn } = this.state;\n            if( !isLoggedIn ) {\n                this.redirectToSignIn();\n            } else {\n                this.redirectToPrivatePage();\n            }\n\n            // const sessionData = getSessionStorage(sessionStorageKey.user);\n            // if(!!sessionData && sessionData !== '') {\n            //     const sessionDataObj = JSON.parse(sessionData);\n\n            //     actions.updateUserInfo({\n            //         username: sessionDataObj.username,\n            //         id: sessionDataObj._id,\n            //         voucherifyId: sessionDataObj.voucherifyId,\n            //         sourceId: sessionDataObj.sourceId,\n            //         displayName: sessionDataObj.displayName,\n            //         email: sessionDataObj.email,\n            //         imagePath: sessionDataObj.imagePath || '',\n            //         createdAt: sessionDataObj.createdAt,\n            //         friends: sessionDataObj.friends,\n            //         notification: sessionDataObj.notification,\n            //         giftList: sessionDataObj.giftList,\n            //         metadata: sessionDataObj.metadata,\n            //     });\n            // }\n        };\n\n        render() {\n            return <Component globalStates={this.state} globalActions={actions} {...this.props as P} />;\n        }\n    }\n\n    return WithMeiosis;\n};\n\n\nexport default withMeiosis;","import React from \"react\";\nimport withMeiosis, { WithMeiosisProps } from \"../../../components/HOC\";\n\ntype LoginProps = {\n    className?: string,\n    // onShowHide?: () => void,\n}\n\nconst Login: React.FC<LoginProps & WithMeiosisProps> = ({className}) => {\n    return <div className=\"login\">\n        login here\n    </div>;\n}\n\nexport default withMeiosis(Login);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { lighten } from \"polished\";\nimport { \n    animations,\n    colorRange,\n    elementSizes, \n    fontSizes,\n    gaps, \n    styleGroup\n} from \"../../../constants/layout\";\nimport withMeiosis, { WithMeiosisProps } from \"../../HOC\";\nimport { AccordionListType, StyledColorProps } from \"../../../models\";\n\n\ntype AccordionListProps = AccordionListType & {\n    className?: string,\n}\n\nconst AccordionList: React.FC<AccordionListProps & WithMeiosisProps> = ({\n    globalStates, \n    title, \n    children, \n    titleIcon,\n    onClick,\n    className,\n}) => {\n    const onShowHideBody = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if(!!onClick && typeof onClick === 'function') {\n            onClick(e);\n        }\n    };\n    \n    return (\n        <AccordionListWrapper \n            className={[\n                \"accordion-list\",\n                (!!className ? ' ' + className : '')\n            ].join('')}\n            themeColor={globalStates!.themeColor}\n        >\n            <div \n                className={[\n                    \"accordion-title\",\n                    (!titleIcon || titleIcon === '' ? ' no-icon' : '')\n                ].join('')}\n                onClick={onShowHideBody} \n            >\n                <div className=\"icon\"><i className=\"material-icons\">{ titleIcon }</i></div>\n                <div className=\"text\">{ title }</div>\n            </div>\n            <div className=\"accordion-content\">\n                <div className=\"pad-wrapper\">\n                    {children}\n                </div>\n            </div>\n        </AccordionListWrapper>\n    );\n};\n\nexport default withMeiosis(AccordionList);\n\n\nconst AccordionListWrapper = styled.div<StyledColorProps>`\n    width: 100%;\n    \n    & .accordion-title {\n        position: relative;\n        display: flex;\n        width: 100%;\n        height: ${ elementSizes.AccordionTitleHeight };\n        box-sizing: border-box;\n        color: ${ props => lighten(colorRange.L2, props.themeColor.primaryColor) };\n        cursor: pointer;\n        align-items: center;\n\n        & .icon {\n            display: flex;\n            width: ${ elementSizes.AccordionTitleHeight };\n            height: ${ elementSizes.AccordionTitleHeight };\n            margin-right: ${ gaps.XSmall };\n            text-align: center;\n            align-items: center;\n            justify-content: center;\n            \n            & .material-icons {\n                font-size: ${ fontSizes.XLarge };\n            }\n        }\n        \n        & .text {\n            width: calc(100% - 2 * ${ elementSizes.AccordionTitleHeight });\n            font-weight: 500;\n            ${styleGroup.TextOverflow}\n        }\n\n        &:after {\n            position: absolute;\n            top: 0;\n            right: 0;\n            display: flex;\n            width: ${ elementSizes.AccordionTitleHeight };\n            height: ${ elementSizes.AccordionTitleHeight };\n            font-family: \"Material Icons\";\n            font-size: ${ fontSizes.XLarge };\n            justify-content: center;\n            align-items: center;\n            opacity: 1;\n            content: \"expand_more\";\n        }\n    \n        &:hover {\n            background-color: ${ props => lighten(0.75, props.themeColor.grayColor!) };\n        }\n\n        &.no-icon {\n            & .icon {\n                display: none;\n            }\n        \n            & .text {\n                width: calc(100% - ${ elementSizes.AccordionTitleHeight });\n                padding-left: ${ gaps.Common };\n            }\n        }    \n    }\n\n    & .accordion-content {\n        height: 0;\n        overflow: hidden;\n        border-top: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n        transition: height ${ animations.Transition };\n        \n        & .pad-wrapper {\n            padding: ${ gaps.Common }; \n        }\n    }\n\n    &.open {\n        border-bottom: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n\n        & .accordion-title {\n            &:after {\n                content: 'expand_less';\n            }\n        }\n\n        & .accordion-content {\n            overflow-y: auto;\n        }\n    }\n\n    .content-no-padded & {\n        & .accordion-content {\n            & .pad-wrapper {\n                padding: 0; \n            }\n        }    \n    }\n                \n    &:last-child {\n        & .accordion-content {\n            border-top: 0;\n        }\n\n        &.open {\n            border-bottom: 0;\n            \n            & .accordion-content {\n                border-top: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n            }\n        }\n    }\n`;","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { lighten } from \"polished\";\nimport { colorRange, elementSizes } from \"../../constants/layout\";\nimport withMeiosis, { WithMeiosisProps } from \"../HOC\";\nimport { AccordionListType, StyledColorProps } from \"../../models\";\nimport AccordionList from \"./AccordionList\";\n\ntype AccordionProps = {\n    listData: AccordionListType[],\n    firstItemOpen?: boolean,\n    allowMultipleOpen?: boolean,\n    maxContentHeight?: number,\n    contentNoPadded?: boolean,\n    className?: string,\n}\n\nconst Accordion: React.FC<AccordionProps & WithMeiosisProps> = ({\n    globalStates, \n    listData, \n    firstItemOpen, \n    allowMultipleOpen,\n    maxContentHeight, \n    contentNoPadded,\n    className\n}) => {\n    const accordionRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if(!!accordionRef.current) {\n            const curAccordion = accordionRef.current;\n            if(!!firstItemOpen) {\n                // NOTE: \n                // initial page load return wrong scrollHeight due to font family issue\n                // there should be a better way to handle delay load instead of setTimeout\n                // perhaps do proper font load done listener before entire app starts\n\n                setTimeout(() => {\n                    const firstChild: HTMLDivElement = curAccordion.firstChild as HTMLDivElement;\n                    openItem(firstChild);\n                }, 400);\n            }\n        } \n    }, [firstItemOpen]);\n\n\n    const getItemSiblings = (curElm: HTMLDivElement) => {\n        let siblings: HTMLDivElement[] = []; \n        \n        if(!accordionRef.current) {\n            return siblings;\n        }\n\n        let child: HTMLDivElement = accordionRef.current.firstChild as HTMLDivElement;\n        while(child) {\n            if(child.nodeType === 1 && child !== curElm) {\n                siblings.push(child);\n            }\n            child = child.nextSibling as HTMLDivElement;\n        }\n        return siblings;\n    };\n\n    const openItem = (curItem: HTMLDivElement) => {\n        const curBody: HTMLDivElement = curItem.getElementsByClassName('accordion-content')[0] as HTMLDivElement;\n        const curContent: HTMLDivElement = curBody.getElementsByClassName('pad-wrapper')[0] as HTMLDivElement;\n\n        if( curItem.classList.contains('open') ) {\n            curItem.classList.remove('open');\n            curBody.removeAttribute('style');\n        } else {\n            curItem.classList.add('open');\n\n            let contentHeight = curContent.offsetHeight;\n            if(!!maxContentHeight) {\n                contentHeight = maxContentHeight < contentHeight ? maxContentHeight : contentHeight;\n            }\n            curBody.style.height = contentHeight + 'px';\n\n            if(!allowMultipleOpen) {\n                const otherSiblings: HTMLDivElement[] = getItemSiblings(curItem);\n                for(const child of otherSiblings) {\n                    if(child.classList.contains('open')) {\n                        child.classList.remove('open');\n                        const childBody: HTMLDivElement = child.getElementsByClassName('accordion-content')[0] as HTMLDivElement;\n                        childBody.removeAttribute('style');\n                    }\n                }\n            }\n        }\n    }\n\n    const onItemClickHandler = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        const curItem: HTMLDivElement = e.currentTarget.parentNode as HTMLDivElement;\n        openItem(curItem);\n    };\n\n    const resizeOpenItem = () => {\n        if(!!accordionRef.current) {\n            const children: HTMLCollectionOf<Element> = accordionRef.current.getElementsByClassName('accordion-list');\n            for(const child of children) {\n                if(child.classList.contains('open')) {\n                    const curItem: HTMLDivElement = child as HTMLDivElement;\n                    const curBody: HTMLDivElement = curItem.getElementsByClassName('accordion-content')[0] as HTMLDivElement;\n                    const curContent: HTMLDivElement = curBody.getElementsByClassName('pad-wrapper')[0] as HTMLDivElement;\n\n                    let contentHeight = curContent.offsetHeight;\n                    if(!!maxContentHeight) {\n                        contentHeight = maxContentHeight < contentHeight ? maxContentHeight : contentHeight;\n                    }\n                \n                    curBody.style.height = contentHeight + 'px';\n                }\n            }\n        }\n    };\n\n    window.addEventListener('resizeEnd', (e: Event) => {\n        resizeOpenItem();\n    });\n    window.addEventListener('showHideSideMenu', (e: Event) => {\n        setTimeout(() => {\n            // Only trigger resize after animation ends\n            resizeOpenItem();\n        }, 200);\n    });\n\n    return (\n        <AccordionWrapper \n            className={[\n                \"accordion\", \n                (!!contentNoPadded ? ' content-no-padded' : ''),\n                (!!className ? ' ' + className : '')\n            ].join('')}\n            ref={accordionRef}\n            themeColor={globalStates!.themeColor}\n        >{ \n            listData.map((listItem: AccordionListType, index) => \n                <AccordionList \n                    testProp={`al-${index}`}\n                    title={listItem.title} \n                    titleIcon={listItem.titleIcon} \n                    { ...(!!maxContentHeight ? { maxContentHeight } : {}) }\n                    onClick={onItemClickHandler}\n                    key={`al-${index}`}\n                >{ listItem.children }</AccordionList>\n            )\n        }</AccordionWrapper>\n    );\n};\n\nexport default withMeiosis(Accordion);\n\n\nconst AccordionWrapper = styled.div<StyledColorProps>`\n    width: 100%;\n    max-width: ${elementSizes.AccordionMaxWidth};\n    border: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n    border-radius: ${elementSizes.BorderRadius};\n    background-color: #fff;\n    overflow: hidden;\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport Accordion from \"../../../components/Accordion\";\nimport withMeiosis, { WithMeiosisProps } from \"../../../components/HOC\";\nimport { elementSizes, gaps } from \"../../../constants/layout\";\nimport { AccordionListType } from \"../../../models\";\n\ntype ComponentAccordionProps = {\n    className?: string,\n    // onShowHide?: () => void,\n}\n\nconst ComponentAccordion: React.FC<ComponentAccordionProps & WithMeiosisProps> = ({globalActions, globalStates, className}) => {\n    const getAccordionHandler = (type: string): AccordionListType[] => {\n        let accordionData: AccordionListType[] = [];\n        switch(type) {\n            case 'basic': \n                accordionData = [{\n                    title: 'Pellentesque venenatis at ligula et posuere',\n                    children: <div>Lorem ipsum dolor sit amet<br />consectetur adipiscing elit<br />sed do eiusmod tempor<br />incididunt ut labore<br />et dolore magna aliqua<br /><br />Ut enim ad minim veniam,<br />quis nostrud exercitation<br />ullamco laboris nisi ut<br />aliquip ex ea commodo consequat</div>,\n                }, {\n                    title: 'Morbi non turpis bibendum ipsum cursus finibus',\n                    children: <div>Lorem ipsum dolor sit amet<br />consectetur adipiscing elit<br />sed do eiusmod tempor<br />incididunt ut labore<br />et dolore magna aliqua<br /><br />Ut enim ad minim veniam,<br />quis nostrud exercitation<br />ullamco laboris nisi ut<br />aliquip ex ea commodo consequat<br /><br />Lorem ipsum dolor sit amet<br />consectetur adipiscing elit<br />sed do eiusmod tempor<br />incididunt ut labore<br />et dolore magna aliqua<br /><br />Ut enim ad minim veniam,<br />quis nostrud exercitation<br />ullamco laboris nisi ut<br />aliquip ex ea commodo consequat</div>,\n                }, {\n                    title: 'Integer id eros vel dolor lobortis condimentum',\n                    children: <div>Lorem ipsum dolor sit amet<br />consectetur adipiscing elit<br />sed do eiusmod tempor<br />incididunt ut labore<br />et dolore magna aliqua<br /><br />Ut enim ad minim veniam,<br />quis nostrud exercitation<br />ullamco laboris nisi ut<br />aliquip ex ea commodo consequat<br /><br />Lorem ipsum dolor sit amet<br />consectetur adipiscing elit<br />sed do eiusmod tempor<br />incididunt ut labore<br />et dolore magna aliqua<br /><br />Ut enim ad minim veniam,<br />quis nostrud exercitation<br />ullamco laboris nisi ut<br />aliquip ex ea commodo consequat</div>,\n                }];                    \n            break;\n            case 'with-icons': \n                accordionData = [{\n                    title: 'Pellentesque venenatis at ligula et posuere',\n                    children: <div>Lorem ipsum dolor sit amet<br />consectetur adipiscing elit<br />sed do eiusmod tempor<br />incididunt ut labore<br />et dolore magna aliqua<br /><br />Ut enim ad minim veniam,<br />quis nostrud exercitation<br />ullamco laboris nisi ut<br />aliquip ex ea commodo consequat</div>,\n                    titleIcon: 'camera_enhance',\n                }, {\n                    title: 'Morbi non turpis bibendum ipsum cursus finibus',\n                    children: <div>Lorem ipsum dolor sit amet<br />consectetur adipiscing elit<br />sed do eiusmod tempor<br />incididunt ut labore<br />et dolore magna aliqua<br /><br />Ut enim ad minim veniam,<br />quis nostrud exercitation<br />ullamco laboris nisi ut<br />aliquip ex ea commodo consequat<br /><br />Lorem ipsum dolor sit amet<br />consectetur adipiscing elit<br />sed do eiusmod tempor<br />incididunt ut labore<br />et dolore magna aliqua<br /><br />Ut enim ad minim veniam,<br />quis nostrud exercitation<br />ullamco laboris nisi ut<br />aliquip ex ea commodo consequat</div>,\n                    titleIcon: 'build_circle',\n                }, {\n                    title: 'Integer id eros vel dolor lobortis condimentum',\n                    children: <div>Lorem ipsum dolor sit amet<br />consectetur adipiscing elit<br />sed do eiusmod tempor<br />incididunt ut labore<br />et dolore magna aliqua<br /><br />Ut enim ad minim veniam,<br />quis nostrud exercitation<br />ullamco laboris nisi ut<br />aliquip ex ea commodo consequat<br /><br />Lorem ipsum dolor sit amet<br />consectetur adipiscing elit<br />sed do eiusmod tempor<br />incididunt ut labore<br />et dolore magna aliqua<br /><br />Ut enim ad minim veniam,<br />quis nostrud exercitation<br />ullamco laboris nisi ut<br />aliquip ex ea commodo consequat</div>,\n                    titleIcon: 'lightbulb',\n                }];\n            break;\n            case 'no-padded-content': \n                accordionData = [{\n                    title: 'Pellentesque venenatis at ligula et posuere',\n                    children: <ContentListWrapper className=\"content-list\">\n                        <li>Lorem ipsum dolor sit amet</li>\n                        <li>consectetur adipiscing elit</li>\n                        <li>sed do eiusmod tempor incididunt ut labore</li>\n                        <li>et dolore magna aliqua ut enim ad minim veniam</li>\n                        <li>quis nostrud exercitation</li>\n                    </ContentListWrapper>,\n                    titleIcon: 'camera_enhance',\n                }, {\n                    title: 'Morbi non turpis bibendum ipsum cursus finibus',\n                    children: <ContentListWrapper className=\"content-list\">\n                        <li>Lorem ipsum dolor sit amet</li>\n                        <li>consectetur adipiscing elit</li>\n                        <li>sed do eiusmod tempor incididunt ut labore</li>\n                        <li>et dolore magna aliqua ut enim ad minim veniam</li>\n                        <li>quis nostrud exercitation</li>\n                    </ContentListWrapper>,\n                    titleIcon: 'build_circle',\n                }, {\n                    title: 'Integer id eros vel dolor lobortis condimentum',\n                    children: <ContentListWrapper className=\"content-list\">\n                        <li>Lorem ipsum dolor sit amet</li>\n                        <li>consectetur adipiscing elit</li>\n                        <li>sed do eiusmod tempor incididunt ut labore</li>\n                        <li>et dolore magna aliqua ut enim ad minim veniam</li>\n                        <li>quis nostrud exercitation</li>\n                    </ContentListWrapper>,\n                    titleIcon: 'lightbulb',\n                }];\n            break;\n            default:\n        }\n\n        return accordionData;\n    }\n    \n    return <div className=\"component-accordion\">\n        <h1>Accordion</h1>\n        \n        <div className=\"columnised\">\n            <div className=\"col-50\">\n                <h4>Basic Accordion</h4>\n                <Accordion \n                    listData={getAccordionHandler('basic')} \n                />\n                <br />\n                <br />\n                \n                <h4>Basic Accordion with icons</h4>\n                <Accordion \n                    listData={getAccordionHandler('with-icons')} \n                />\n                <br />\n                <br />\n                <h4>Accordion with first item open</h4>\n                <Accordion \n                    listData={getAccordionHandler('with-icons')} \n                    firstItemOpen={true}\n                />\n                <br />\n                <br />\n                <h4>Accordion with allow multiple items open</h4>\n                <p>Click to trigger open items</p>\n                <Accordion \n                    listData={getAccordionHandler('with-icons')} \n                    firstItemOpen={true}\n                    allowMultipleOpen={true}\n                />\n                <br />\n                <br />\n            </div>\n            <div className=\"col-50\">\n                <h4>Accordion with maximum content height</h4>\n                <Accordion \n                    listData={getAccordionHandler('with-icons')} \n                    maxContentHeight={200}\n                    firstItemOpen={true}\n                />\n                <br />\n                <br />\n\n                <h4>Accordion without default content padding</h4>\n                <p>Useful for content that requires specific padding gaps</p>\n                <Accordion \n                    listData={getAccordionHandler('no-padded-content')} \n                    maxContentHeight={200}\n                    firstItemOpen={true}\n                    contentNoPadded={true}\n                />\n                \n                <br />\n                <br />\n            </div>\n        </div> \n    </div>;\n}\n\nexport default withMeiosis(ComponentAccordion);\n\n\n// NOTE: \n// this style is just to style mock content for demonstration purposes,\n// hence not using any themeColor\nconst ContentListWrapper = styled.ul`\n    padding: 0;\n    margin: 0;\n    list-style: none;\n    \n    & > li {\n        display: block;\n        padding: ${gaps.Small} ${gaps.Common};\n        border-bottom: ${elementSizes.Border1Pixel('#eee')};\n\n        &:last-child {\n            border-bottom: 0;\n        }\n\n        &:nth-child(odd) {\n            background-color: #f5f5f5;\n        }\n    }\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { lighten } from \"polished\";\nimport { \n    colorRange,\n    elementSizes, \n    gaps \n} from \"../../constants/layout\";\nimport withMeiosis, { WithMeiosisProps } from \"../HOC\";\nimport { StyledColorProps } from \"../../models\";\n\ntype ButtonProps = {\n    children: React.ReactNode,\n    onClick?: () => void,\n    className?: string,\n}\n\nconst Button: React.FC<ButtonProps & WithMeiosisProps> = ({globalStates, children, onClick, className}) => {\n    return (\n        <ButtonWrapper \n            className={[\n                \"btn\",\n                (!!className ? ' ' + className : '')\n            ].join('')}\n            themeColor={globalStates!.themeColor}\n            onClick={onClick}\n        >{ children }</ButtonWrapper>\n    );\n};\n\nexport default withMeiosis(Button);\n\n\nconst ButtonWrapper = styled.button<StyledColorProps>`\n    display: inline-flex;\n    height: ${ elementSizes.ButtonHeight };\n    padding: 0 ${ gaps.Common }; \n    color: #fff;\n    border: 0;\n    border-radius: ${elementSizes.BorderRadius};\n    text-transform: uppercase;\n    font-family: 'Roboto', 'Arial', 'Helvetica Neue', sans-serif;\n    background-color: ${props => props.themeColor.primaryColor};\n    cursor: pointer;\n    justify-content: center;\n    align-items: center;\n\n    & + .btn {\n        margin-left: ${ gaps.XSmall };\n    }\n\n    &:hover {\n        background-color: ${props => lighten(colorRange.L2, props.themeColor.primaryColor)};\n    }\n\n    &.ghost {\n        position: relative;\n        color: ${props => props.themeColor.primaryColor};\n        background: transparent;\n        \n        &:after {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            border: 2px solid ${props => props.themeColor.primaryColor};\n            border-radius: ${elementSizes.BorderRadius};\n            box-sizing: border-box;\n            content: '';\n        }\n\n        &:hover {\n            color: ${props => lighten(colorRange.L2, props.themeColor.primaryColor)};\n            \n            &:after {\n                border: 2px solid ${props => lighten(colorRange.L2, props.themeColor.primaryColor)};\n            }\n        }\n    }\n`;","import React from \"react\";\nimport Button from \"../../../components/Button\";\nimport withMeiosis, { WithMeiosisProps } from \"../../../components/HOC\";\n\ntype ComponentAlertProps = {\n    className?: string,\n    // onShowHide?: () => void,\n}\n\nconst ComponentAlert: React.FC<ComponentAlertProps & WithMeiosisProps> = ({globalActions, globalStates, className}) => {\n    const openModalHandler = (type: string) => {\n        let modalObj = {};\n        switch(type) {\n            case 'basic': \n                modalObj = {\n                    title: 'Basic Modal',\n                    content: 'This is a modal with single button',\n                    positiveButtonText: 'OK',\n                    positiveButtonAction: () => console.log('OK'),\n                    isShown: true,\n                    allowOverlayClose: true,\n                }\n            break;\n            case 'basic-dual-button': \n                modalObj = {\n                    title: 'Basic Modal with dual buttons',\n                    content: 'This is a modal with with positive and negative buttons',\n                    positiveButtonText: 'OK',\n                    negativeButtonText: 'Cancel',\n                    positiveButtonAction: () => console.log('OK'),\n                    negativeButtonAction: () => console.log('Cancel'),\n                    isShown: true,\n                    showNegativeButton: true,\n                    allowOverlayClose: true,\n                }\n            break;\n            case 'long-content': \n                modalObj = {\n                    title: 'Modal with long HTML content',\n                    content: `\n                    <span style=\"text-align: left\">\n                        <b>Lorem ipsum dolor sit amet, consectetur adipiscing elit</b>\n                        <br />\n                        Donec aliquet condimentum odio in varius. Nunc tristique leo ac eros interdum venenatis. Sed non leo non nulla condimentum mattis.\n                        <br /><br />\n                        \n                        <b>Duis commodo, arcu eu vulputate ullamcorper</b>\n                        <br />\n                        Purus neque congue turpis, eget placerat lectus eros in nibh. Morbi quis pulvinar lacus. Aenean accumsan est libero, id feugiat quam mattis id. Suspendisse et molestie ex. Ut a orci elit.\n                        <br /><br />\n                        \n                        <b>Morbi vel mauris at quam euismod egestas</b>\n                        <br />\n                        Curabitur eget neque imperdiet sem viverra eleifend. Aenean dignissim nec orci fringilla suscipit. Aliquam mattis massa dapibus turpis vulputate, quis ornare nisi euismod. \n                        <br /><br />\n\n                        <b>Nam sagittis tellus feugiat vehicula congue</b>\n                        <br />\n                        Ut tincidunt lorem in imperdiet sollicitudin. Integer commodo nulla nibh, in sollicitudin justo tincidunt quis.\n                        <br /><br />\n\n                        <b>Lorem ipsum dolor sit amet, consectetur adipiscing elit</b>\n                        <br />\n                        Donec aliquet condimentum odio in varius. Nunc tristique leo ac eros interdum venenatis. Sed non leo non nulla condimentum mattis.\n                        <br /><br />\n                        \n                        <b>Duis commodo, arcu eu vulputate ullamcorper</b>\n                        <br />\n                        Purus neque congue turpis, eget placerat lectus eros in nibh. Morbi quis pulvinar lacus. Aenean accumsan est libero, id feugiat quam mattis id. Suspendisse et molestie ex. Ut a orci elit.\n                        <br /><br />\n                        \n                        <b>Morbi vel mauris at quam euismod egestas</b>\n                        <br />\n                        Curabitur eget neque imperdiet sem viverra eleifend. Aenean dignissim nec orci fringilla suscipit. Aliquam mattis massa dapibus turpis vulputate, quis ornare nisi euismod. \n                        <br /><br />\n\n                        <b>Nam sagittis tellus feugiat vehicula congue</b>\n                        <br />\n                        Ut tincidunt lorem in imperdiet sollicitudin. Integer commodo nulla nibh, in sollicitudin justo tincidunt quis.\n                    </span>\n                    `,\n                    positiveButtonText: 'OK',\n                    negativeButtonText: 'Cancel',\n                    positiveButtonAction: () => console.log('OK'),\n                    negativeButtonAction: () => console.log('Cancel'),\n                    isShown: true,\n                    showNegativeButton: true,\n                    allowOverlayClose: true,\n                }\n            break;\n            case 'wide': \n                modalObj = {\n                    title: 'Large modal with dual buttons',\n                    content: `\n                        <b>Lorem ipsum dolor sit amet, consectetur adipiscing elit</b>\n                        <br />\n                        Donec aliquet condimentum odio in varius. Nunc tristique leo ac eros interdum venenatis. Sed non leo non nulla condimentum mattis.\n                        <br /><br />\n                        \n                        <b>Duis commodo, arcu eu vulputate ullamcorper</b>\n                        <br />\n                        Purus neque congue turpis, eget placerat lectus eros in nibh. Morbi quis pulvinar lacus. Aenean accumsan est libero, id feugiat quam mattis id. Suspendisse et molestie ex. Ut a orci elit.\n                    </span>\n                    `,\n                    positiveButtonText: 'OK',\n                    negativeButtonText: 'Cancel',\n                    positiveButtonAction: () => console.log('OK'),\n                    negativeButtonAction: () => console.log('Cancel'),\n                    size: 'wide',\n                    isShown: true,\n                    showNegativeButton: true,\n                    allowOverlayClose: true,\n                }\n            break;\n            default:\n        }\n        globalActions.openModal(modalObj);\n    }\n    \n    return <div className=\"component-alert\">\n        <h1>Alerts</h1>\n        \n        <h2>Modal Prompts</h2>\n        \n        <div className=\"columnised\">\n            <div className=\"col-50\">\n                <h4>Basic Modal</h4>\n                <p>This modal also support enable / disable outer overlay click to close the prompt.</p>\n                <Button onClick={() => openModalHandler('basic')}>Open modal</Button>\n                <br />\n                <br />\n                <br />\n\n                <h4>Modal with positive / negative button</h4>\n                <Button onClick={() => openModalHandler('basic-dual-button')}>Open modal</Button>\n                <br />\n                <br />\n                <br />\n            </div>\n            <div className=\"col-50\">\n                <h4>Modal with long HTML content</h4>\n                <Button onClick={() => openModalHandler('long-content')}>Open modal</Button>\n                <br />\n                <br />\n                <br />\n\n                <h4>Large modal</h4>\n                <Button onClick={() => openModalHandler('wide')}>Open modal</Button>\n                <br />\n                <br />\n            </div>\n        </div>\n    </div>;\n}\n\nexport default withMeiosis(ComponentAlert);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { lighten } from \"polished\";\nimport { \n    colorRange,\n    elementSizes, \n    fontSizes, \n    gaps \n} from \"../../constants/layout\";\nimport { StyledColorProps, TableDataType } from \"../../models\";\nimport withMeiosis, { WithMeiosisProps } from \"../HOC\";\n\ntype TableProps = {\n    tableData: TableDataType;\n    className?: string,\n}\n\nconst Table: React.FC<TableProps & WithMeiosisProps> = ({globalStates, tableData, className}) => {\n    return (\n        <TableWrapper \n            className={[\n                \"table\",\n                (!!tableData.highlightAltRow ? ' highlight-alt-row' : ''),\n                (!!tableData.columnRelayoutResponsive ? ' column-relayout' : ''),\n                (!!tableData.cellNoWrap ? ' cell-no-wrap' : ''),\n                (!!className ? ' ' + className : '')\n            ].join('')} \n            themeColor={globalStates!.themeColor}\n        >\n            <table>\n                { tableData.headerData \n                    ? <tr className=\"table-header\">{ \n                        tableData.headerData.map( (item: string | number, key: number) => <th key={`th-${key}`}>{ item }</th>) \n                    }</tr>\n                    : null\n                }\n                { tableData.rowData.map( (rowItem: any, key1: number) => \n                    <tr>{ rowItem.map((item: string | number, key2: number) => \n                        <td key={`td-${key1}-${key2}`}>\n                            { tableData.headerData \n                                ? <span className=\"label\">{ tableData.headerData[key2] }</span>\n                                : null\n                            }\n                            <span className=\"value\">{ item }</span>\n                        </td>\n                    ) }</tr>\n                )}\n            </table>\n        </TableWrapper>\n    );\n};\n\nexport default withMeiosis(Table);\n\n\nconst TableWrapper = styled.div<StyledColorProps>`\n    width: 100%;\n    border: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L4, props.themeColor.grayColor!)) };\n    overflow-x: auto;\n\n    & table {\n        width: 100%;\n        border: 0;\n        border-collapse: collapse;\n    \n        & th, td {\n            padding: ${ gaps.Small };\n        }\n    \n        & th {\n            background-color: ${ props => lighten(colorRange.L3, props.themeColor.grayColor!) };\n            color: #fff;\n        }\n    \n        & td {\n            font-size: ${fontSizes.Common};\n\n            & .label {\n                display: none;\n                font-weight: 500;\n                margin-right: ${gaps.XSmall};\n\n                &:after {\n                    content: ':';\n                }\n            }\n        }\n\n        & tr {\n            border-bottom: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n            \n            &:last-child {\n                border-bottom: 0;\n            }\n\n            & th {\n                text-align: left;\n            }\n        }\n    }\n\n    &.cell-no-wrap {\n        & table {\n            & th, td {\n                white-space: nowrap;\n            }        \n        }    \n    }\n\n    &.highlight-alt-row {\n        & table {\n            & tr {\n                &:nth-child(odd) {\n                    background-color: ${ props => lighten(colorRange.L5, props.themeColor.grayColor!) };\n                }\n            }        \n        }    \n    }\n\n    &.column-relayout {\n        @media screen and (max-width: ${elementSizes.MediaScreenMediumWidth}) {\n            & table {\n                & td {\n                    display: flex;\n                    width: 100%;\n                    padding: ${ gaps.XSmall } ${ gaps.Small };\n                    box-sizing: border-box;\n        \n                    & .label {\n                        display: inline;\n                    }\n                }\n            \n                & th {\n                    display: none;\n                }\n            \n                & tr {\n                    display: block;\n                    width: 100%;\n                    padding: ${ gaps.Small } 0;\n\n                    &.table-header {\n                        display: none;\n                    }\n                }\n            }\n        }\n    }\n`;","import React from \"react\";\nimport withMeiosis, { WithMeiosisProps } from \"../../../components/HOC\";\nimport Table from \"../../../components/Table\";\nimport { TableDataType } from \"../../../models\";\n\n\ntype ComponentTableProps = {\n    className?: string,\n    // onShowHide?: () => void,\n}\n\nconst ComponentTable: React.FC<ComponentTableProps & WithMeiosisProps> = ({globalActions, globalStates, className}) => {\n    const getTableDataHandler = (type: string): TableDataType => {\n        let tableData: TableDataType = {\n            headerData: ['Company', 'Contact', 'Country'],\n            rowData: [\n                ['Alfreds Futterkiste',\t'Maria Anders',\t'Germany'],\n                ['Centro comercial Moctezuma', 'Francisco Chang', 'Mexico'],\n                ['Ernst Handel', 'Roland Mendel', 'Austria'],\n                ['Island Trading', 'Helen Bennett', 'UK'],\n                ['Laughing Bacchus Winecellars', 'Yoshi Tannamuri', 'Canada'],\n                ['Magazzini Alimentari Riuniti', 'Giovanni Rovelli', 'Italy']\n            ],\n        };\n        \n        switch(type) {\n            case 'basic': \n                tableData = {\n                    ...tableData,\n                    highlightAltRow: false,\n                    cellNoWrap: false,\n                    columnRelayoutResponsive: false,\n                };                    \n            break;\n            case 'highlight-alt-row': \n                tableData = {\n                    ...tableData,\n                    highlightAltRow: true,\n                    cellNoWrap: true,\n                    columnRelayoutResponsive: false,\n                };                    \n        break;\n            case 'column-relayout': \n                tableData = {\n                    ...tableData,\n                    highlightAltRow: true,\n                    cellNoWrap: true,\n                    columnRelayoutResponsive: true,\n                };                    \n        break;\n            default:\n        }\n\n        return tableData;\n    }\n    \n    return <div className=\"component-table\">\n        <h1>Table</h1>\n        <h4>Basic Table</h4>\n        <Table tableData={getTableDataHandler('basic')} />\n        <br />\n        <br />\n\n        <h4>Table with alternate row highlight</h4>\n        <Table tableData={getTableDataHandler('highlight-alt-row')} />\n        <br />\n        <br />\n        \n        <h4>Responsive behaviour with content Relayout (&lt;800px)</h4>\n        <p>This table component by default uses simple scrollable content when screen width is lesser than 800px.</p>\n        <p>The component also provides another alternative re-layout when at the same screen width as shown below. (Resize the screen width to lesser than 800px to see the behaviour)</p>\n        <Table tableData={getTableDataHandler('column-relayout')} />\n        <br />\n        <br />\n    </div>;\n}\n\nexport default withMeiosis(ComponentTable);\n","import React from \"react\";\nimport withMeiosis, { WithMeiosisProps } from \"../../components/HOC\";\n\ntype DashboardProps = {\n    className?: string,\n    // onShowHide?: () => void,\n}\n\nconst Dashboard: React.FC<DashboardProps & WithMeiosisProps> = ({className}) => {\n    return <div className=\"dashboard\">\n        dashboard here\n    </div>;\n}\n\nexport default withMeiosis(Dashboard);\n","import { darken } from \"polished\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { \n    colorRange,\n    elementSizes, \n    fontSizes, \n    gaps \n} from \"../../constants/layout\";\nimport { StyledColorProps } from \"../../models\";\nimport withMeiosis, { WithMeiosisProps } from \"../HOC\";\n\n\ntype NotificationProps = {\n    disableClick?: boolean,\n    className?: string,\n}\n\nconst Notification: React.FC<WithMeiosisProps & NotificationProps> = ({globalActions, globalStates, disableClick, className}) => {\n    const userInfo = globalStates?.userInfo;\n\n    const getNotificationCount = ():number => {\n        let count = 0;\n        userInfo?.notification.forEach((notification) => {\n            notification.notificationList.forEach((item) => {\n                if(!item.read) count++;\n            });\n        });\n        return count;\n    }\n\n    const onShowHideNotificationHandler = () => {\n        globalActions.updateLockPageScroll(!globalStates?.showNotificationPanel);\n        globalActions.showHideNotificationPanel(!globalStates?.showNotificationPanel);\n    };\n\n    return (\n        <NotificationWrapper \n            themeColor={globalStates!.themeColor}\n            className={[\n                \"notification\",\n                (!!disableClick ? ' no-click' : ''),\n                (getNotificationCount() > 0 ? ' active' : '')\n            ].join('')}\n            onClick={!disableClick ? onShowHideNotificationHandler : undefined}\n        >\n            <div className=\"material-icons\">{ getNotificationCount() > 0 ? 'notifications' : 'notifications_none' }</div>\n            { (getNotificationCount() > 0)\n                ? <div className=\"counter\">{ getNotificationCount() > 99 ? '99+' : getNotificationCount() }</div>\n                : null\n            }\n        </NotificationWrapper>\n    );\n};\n\nexport default withMeiosis(Notification);\n\n\nconst NotificationWrapper = styled.div<StyledColorProps>`\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: ${ elementSizes.HeaderHeight };\n    height: ${ elementSizes.HeaderHeight };\n    cursor: default;\n\n    & .material-icons {\n        font-size: 1.8rem;\n        color: #fff;\n    }\n\n    & .counter {\n        position: absolute;\n        top: ${ gaps.XSmall };\n        left: calc(50% + 1px);\n        padding: 1px 3px;\n        color: #fff;\n        font-size: ${ fontSizes.XSmall };\n        border-radius: ${elementSizes.BorderRadius};\n        background-color: ${ props => props.themeColor.dangerColor };\n    }\n\n    &.active {\n        cursor: pointer;\n\n        & .material-icons {\n            color: ${ props => darken(colorRange.L1, props.themeColor.infoColor!) };\n        }\n\n        &.no-click {\n            cursor: default;\n        }\n    }\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { lighten } from \"polished\";\nimport { \n    colorRange,\n    elementSizes, \n    gaps \n} from \"../../constants/layout\";\nimport Notification from \"../Notification\";\nimport { StyledColorProps } from \"../../models\";\nimport withMeiosis, { WithMeiosisProps } from \"../HOC\";\n\ntype HeaderProps = {\n    className?: string,\n}\n\nconst Header: React.FC<HeaderProps & WithMeiosisProps> = ({globalStates, className}) => {\n    return (\n        <HeaderWrapper className=\"header\" themeColor={globalStates!.themeColor}>\n            <div className=\"notification-section\">\n                <Notification />\n            </div>\n        </HeaderWrapper>\n    );\n};\n\nexport default withMeiosis(Header);\n\n\nconst HeaderWrapper = styled.header<StyledColorProps>`\n    display: flex;\n    height: ${ elementSizes.HeaderHeight };\n    padding: 0 ${ gaps.XSmall } 0 ${ gaps.Common }; \n    background-color: ${ props => lighten(colorRange.L3, props.themeColor.secondaryColor) };\n    align-items: center;\n\n    & .notification-section {\n        margin-left: auto;\n    }\n`;","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { lighten, rgba } from \"polished\";\nimport { \n    animations,\n    colorRange,\n    elementSizes, \n    fontSizes, \n    gaps, \n    styleGroup \n} from \"../../constants/layout\";\nimport withMeiosis, { WithMeiosisProps } from \"../HOC\";\nimport Button from \"../Button\";\nimport { StyledColorProps } from \"../../models\";\nimport { GlobalInitialState } from \"../../services/states\";\n\n\ntype ModalProps = {\n    className?: string,\n}\n\nconst Modal: React.FC<WithMeiosisProps & ModalProps> = ({globalActions, globalStates, className}) => {\n    const modalData = globalStates?.modalData;\n    const showModal = modalData?.isShown;\n    // const modalRef: React.RefObject<HTMLDivElement> = React.createRef();\n    const modalRef = useRef<HTMLDivElement>(null);\n\n    const onCloseHandler = () => {\n        globalActions.closeModal();\n    };\n\n    const onNegativeClickHandler = () => {\n        globalActions.closeModal();\n        const action = modalData?.negativeButtonAction;\n        if(!!action && typeof action === 'function') {\n            action();\n        }\n    };\n\n    const onPositiveClickHandler = () => {\n        globalActions.closeModal();\n        const action = modalData?.positiveButtonAction;\n        if(!!action && typeof action === 'function') {\n            action();\n        }\n    };\n\n    useEffect(() => {\n        if(!!modalRef.current) {\n            const _ref = modalRef.current;\n            if(!!showModal) {\n                _ref.style.display = 'flex';\n                setTimeout(() => { _ref.classList.add('show') }, 0 );\n            } else {\n                _ref.classList.remove('show');\n                setTimeout(() => { _ref.style.display = 'none' }, 200 );\n            }\n        }\n    }, [showModal, modalRef]);\n\n    return ( !!modalData ? (\n        <ModalWrapper \n            className={[\n                \"modal-prompt\",\n                (modalData.size ? ` ${modalData.size}` : ''),\n            ].join('')}\n            ref={modalRef}\n            themeColor={globalStates!.themeColor}\n        >\n            <div className=\"overlay\" \n                onClick={!!modalData.allowOverlayClose ? onCloseHandler : undefined}\n            />\n            <div className=\"modal-popup\">\n                <div className=\"modal-header\">\n                    <div className=\"title\">\n                        <span>{modalData.title}</span>\n                    </div>\n                    <button className=\"close\" onClick={onCloseHandler}>\n                        <span className=\"material-icons\">close</span>\n                    </button>\n                </div>\n                <div className=\"modal-content\">\n                    <span dangerouslySetInnerHTML={{ __html: modalData.content }} />\n                </div>\n                <div className=\"modal-footer\">\n                    { !!modalData.showNegativeButton \n                        ? <Button \n                            className=\"ghost\"\n                            onClick={onNegativeClickHandler}\n                        >{ modalData.negativeButtonText || GlobalInitialState.modalData!.negativeButtonText }</Button>\n                        : null\n                    }\n                    <Button onClick={onPositiveClickHandler}>{ modalData.positiveButtonText || GlobalInitialState.modalData!.positiveButtonText }</Button>\n                </div>\n            </div>\n        </ModalWrapper>\n    ) : null\n    );\n};\n\nexport default withMeiosis(Modal);\n\n\nconst ModalWrapper = styled.div<StyledColorProps>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    display: none;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-items: center;\n    opacity: 0;\n    transition: opacity ${animations.Transition};\n\n    & .overlay {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: ${rgba('#000', 0.75)};\n    }\n\n    & .modal-popup {\n        display: flex;\n        flex-flow: column;        \n        position: relative;\n        width: calc(100% - 2 * ${gaps.Common});\n        max-width: ${elementSizes.ModalMaxWidth};\n        max-height: calc(100% - 2 * ${gaps.Common});\n        margin: ${gaps.Common} 0;\n        border-radius: ${elementSizes.BorderRadius};\n        background-color: #fff;\n        overflow: hidden;\n\n        & .modal-header {\n            display: flex;\n            flex: 0 1 ${elementSizes.ModalTitleHeight};\n            height: ${elementSizes.ModalTitleHeight};\n            border-bottom: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n            justify-content: space-between;\n            \n            & .title { \n                display: flex;\n                width: calc(100% - 2 * (${elementSizes.ModalTitleHeight} + ${gaps.Small}));\n                margin-left: calc(${elementSizes.ModalTitleHeight} + ${gaps.Small});\n                font-weight: 500;\n                justify-content: center;\n                align-items: center;\n\n                & > span {\n                    width: 100%;\n                    text-align: center;\n                    ${styleGroup.TextOverflow}\n                }\n            }\n            \n            & .close {\n                display: flex;\n                width: ${elementSizes.ModalTitleHeight};\n                padding: 0;\n                border: 0;\n                justify-content: center;\n                align-items: center;\n                background: transparent;\n                cursor: pointer;\n\n                & .material-icons { \n                    font-size: ${fontSizes.XLarge};\n                }\n\n                &:hover {\n                    background-color: ${ props => lighten(colorRange.L5, props.themeColor.grayColor!) };\n                }\n            }\n        }\n\n        & .modal-content {\n            flex: 1 1 auto;\n            padding: ${gaps.Common} ${gaps.Small};\n            box-sizing: border-box;\n            overflow-y: auto;\n            \n            & > span {\n                display: flex;\n                min-height: 5rem;\n                flex-direction: column;                \n                justify-content: center;\n                align-items: center;\n                text-align: center;\n            }\n        }\n\n        & .modal-footer {\n            flex: 0 1 auto;\n            padding: ${gaps.Small};\n            text-align: center;\n            border-top: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n        }\n    }\n\n    &.show {\n        opacity: 1;\n    }\n\n    &.wide {\n        & .modal-popup {\n            max-width: ${elementSizes.ModalLargeMaxWidth};\n        }    \n    }\n`;\n\n","import { \n    GeneralObjType, \n    PageObjectType, \n    PageType \n} from \"../models\";\nimport { assets, routes } from \"./routes\";\n\nexport const appData: GeneralObjType = {\n    title: 'FiiX',\n    logoPath: assets.IMAGE + '/logo-site.png',\n    profilePath: assets.IMAGE + '/profiles/profile.jpg',\n};\n\nexport const pageList: PageObjectType[] = [\n    {\n        type: PageType.Home,\n        label: 'Home',\n        path: routes.HOME,\n        icon: 'home',\n    },\n    {\n        type: PageType.Dashboard,\n        label: 'Dashboard',\n        path: routes.DASHBOARD,\n        icon: 'dashboard',\n    },\n    {\n        type: PageType.About,\n        label: 'About Us',\n        path: routes.ABOUT_US,\n        icon: 'help_center',\n    },\n    {\n        label: 'Components',\n        icon: 'dashboard_customize',\n        subMenuList: [\n            {\n                type: PageType.Accordion,\n                label: 'Accordion',\n                path: routes.COMPONENT_ACCORDION,\n                icon: 'list_alt',\n            },        \n            {\n                type: PageType.Alert,\n                label: 'Alerts',\n                path: routes.COMPONENT_ALERT,\n                icon: 'announcement',\n            },        \n            {\n                type: PageType.Form,\n                label: 'Form Elements',\n                path: '/components/form',\n                icon: 'vertical_split',\n            },        \n            {\n                type: PageType.Table,\n                label: 'Table',\n                path: routes.COMPONENT_TABLE,\n                icon: 'table_view',\n            },\n        ]\n    },\n    {\n        type: PageType.FAQ,\n        label: 'FAQ',\n        path: routes.FAQ,\n        icon: 'dns',\n    },\n];","import React, { useEffect, useRef } from \"react\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { \n    elementSizes, \n    gaps, \n    animations, \n    fontSizes, \n    colorRange\n} from \"../../constants/layout\";\nimport { pageList } from \"../../constants/app\";\nimport { PageObjectType, StyledColorProps, ThemeColorType } from \"../../models\";\nimport withMeiosis, { WithMeiosisProps } from \"../HOC\";\nimport { lighten } from \"polished\";\n\n\ntype NavigationListProps = {\n    className?: string,\n    triggerCloseSubmenu?: boolean,\n}\n\nconst NavigationList: React.FC<NavigationListProps & WithMeiosisProps> = ({globalStates, className, triggerCloseSubmenu}) => {    \n    const location = useLocation();\n    const subListRef = useRef<HTMLUListElement>(null);\n    // const subListRef: React.RefObject<HTMLUListElement> = React.createRef();\n\n    const generateListContent = (name: string, icon?: string) => {\n        return <>{(!!icon \n            ? <div className=\"icon\"><i className=\"material-icons\">{ icon }</i></div>\n            : null )} <span className=\"text\">{ name }</span></>;\n    };\n\n    const onShowHideSubmenu = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        const t = e.currentTarget;\n        if( t.classList.contains('open') ) {\n            t.classList.remove('open');\n        } else {\n            t.classList.add('open');\n        }\n    };\n\n    const closeAllSubmenu = () => {\n        const subMenuItems = subListRef.current?.getElementsByClassName('submenu-wrapper');\n        if(!!subMenuItems) {\n            for(let item of subMenuItems) {\n                item.classList.remove('open');\n            }\n        }\n    };\n\n    const hasActiveSubmenu = (item: PageObjectType) => {\n        if(!!item.subMenuList) {\n            const matchedLink = item.subMenuList.filter(link => link.path === location.pathname);\n            return (matchedLink.length > 0);\n        }\n        return false;\n    };\n\n    useEffect(() => {\n        if(!!triggerCloseSubmenu) {\n            closeAllSubmenu();\n        }\n    }, [triggerCloseSubmenu, location]);\n\n    return (\n        <NavigationListWrapper \n            className=\"menu-list\" \n            themeColor={globalStates!.themeColor}\n            ref={subListRef}\n        >{\n            pageList.map((item, index) => {\n                return <li key={index}>{\n                    ( !!item.path ? (\n                        <NavLink \n                            to={item.path} \n                            title={item.label}\n                            activeClassName=\"current\"\n                            exact\n                        >{ generateListContent(item.label, item.icon) }</NavLink>\n                    ) : (\n                        !!item.subMenuList && item.subMenuList.length > 0 ? (\n                            <NavigationSubMenuWrapper \n                                className={[\n                                    \"submenu-wrapper\", \n                                    (!!hasActiveSubmenu(item) ? ' current' : '')\n                                ].join('')}\n                                themeColor={globalStates!.themeColor}\n                                onClick={onShowHideSubmenu} \n                            >\n                                <div className=\"menu-title\">{ generateListContent(item.label, item.icon) }</div>\n                                <ul>{\n                                    item.subMenuList.map((item, index2) => {\n                                        return <li key={index + '-' + index2}>{\n                                            ( !!item.path ? (\n                                                <NavLink \n                                                    to={item.path} \n                                                    title={item.label}\n                                                    activeClassName=\"current\"\n                                                    exact\n                                                >{ generateListContent(item.label, item.icon) }</NavLink>\n                                            ) : null )\n                                        }</li>\n                                    })                \n                                }</ul>\n                            </NavigationSubMenuWrapper>\n                        ) : null\n                    ))\n                }</li>\n            })                \n        }</NavigationListWrapper>\n    );\n};\n\nexport default withMeiosis(NavigationList);\n\nconst innerListStyle = (themeColor: ThemeColorType) => `\n    display: flex;\n    width: 100%;\n    height: ${ elementSizes.MenuCloseWidth }; \n    padding: ${ gaps.XSmall };\n    align-items: center;\n    box-sizing: border-box;\n    text-decoration: none;\n    color: ${ lighten(colorRange.L2, themeColor.primaryColor) };\n\n    & .icon {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 2rem;\n        margin-right: ${ gaps.XSmall };\n        text-align: center;\n        transition: all ${ animations.Transition };\n    }\n\n    & .text {\n        font-size: ${ fontSizes.Common };\n        transition: font ${ animations.Transition };\n    }\n\n    &:hover {\n        background-color: ${ lighten(colorRange.L5, themeColor.grayColor!) };\n    }\n`;\n\nconst NavigationListWrapper = styled.ul<StyledColorProps>`\n    min-height: 100%;\n    padding: 0;\n    margin: 0;\n    list-style: none;\n\n    & li {\n        display: block;\n\n        & > a {\n            ${ props => innerListStyle(props.themeColor) };\n        }\n\n        & > a {\n            &.current {\n                color: ${ props => props.themeColor.primaryColor };\n                font-weight: 500;\n\n                & .icon {\n                    color: ${ props => props.themeColor.warningColor };\n                }\n            }\n        }\n    }\n\n    .menu-close & {\n        & li {\n            & > a {\n                & .icon {\n                    width: ${ elementSizes.MenuCloseWidth }; \n                    margin-right: 0;\n                }\n        \n                & .text {\n                    font-size: 0;\n                }\n            }\n        }\n    }\n\n    .peek & {    \n        & li {\n            & > a {\n                & .icon {\n                    width: 2rem;\n                    margin-right: ${ gaps.XSmall };\n                }\n\n                & .text {\n                    font-size: inherit;\n                }\n            }\n        }\n    }\n`;\n\nconst NavigationSubMenuWrapper = styled.div<StyledColorProps>`    \n    & .menu-title {\n        ${ props => innerListStyle(props.themeColor) };\n        position: relative;\n        cursor: pointer;\n\n        &:after {\n            position: absolute;\n            top: 0;\n            right: 0;\n            display: flex;\n            width: ${ elementSizes.SubMenuArrowWidth }; \n            height: ${ elementSizes.MenuCloseWidth }; \n            padding-right: ${ gaps.Small };\n            font-family: \"Material Icons\";\n            font-size: ${ fontSizes.XLarge };\n            justify-content: center;\n            align-items: center;\n            opacity: 1;\n            content: \"expand_more\";\n        }\n    }\n\n    & ul {\n        padding: 0;\n        margin: 0;\n        max-height: 0;\n        overflow: hidden;\n        list-style: none;    \n        transition: max-height ${ animations.Transition };\n\n        & > li {\n            & > a {\n                height: 2.5rem;\n                padding-left: ${ gaps.Common };\n            \n                & .icon {\n                    & .material-icons {\n                        font-size: ${fontSizes.XLarge};\n                    }\n                }\n\n                & .text {\n                    font-size: ${fontSizes.Small};\n                }\n            }\n        }\n    }\n\n    &.open {\n        & .menu-title {\n            &:after {\n                content: 'expand_less';\n            }\n        }\n        \n        & > ul {\n            max-height: ${ elementSizes.SubMenuExpandedMaxHeight };\n        }\n    }\n    \n    &.current {\n        & .menu-title {\n            color: ${ props => props.themeColor.primaryColor };\n            font-weight: 500;\n                \n            & .icon {\n                color: ${ props => props.themeColor.warningColor };\n            }\n\n            &:after {\n                content: 'expand_less';\n            }\n        }\n\n        & > ul {\n            max-height: ${ elementSizes.SubMenuExpandedMaxHeight };\n        }\n    }\n\n    .menu-close & {\n        & .menu-title {\n            & .icon {\n                width: ${ elementSizes.MenuCloseWidth }; \n                margin-right: 0;\n            }\n    \n            & .text {\n                font-size: 0;\n            }\n\n            &:after {\n                opacity: 0;\n            }\n        }\n\n        &.current {\n            & > ul {\n                max-height: 0;\n            }\n        }\n    }\n\n    .peek & {\n        & .menu-title {\n            & .icon {\n                width: 2rem;\n                margin-right: ${ gaps.XSmall };\n            }\n\n            & .text {\n                font-size: inherit;\n            }\n\n            &:after {\n                opacity: 1;\n            }\n        }\n\n        &.current {\n            & > ul {\n                max-height: ${ elementSizes.SubMenuExpandedMaxHeight };\n            }\n        }\n    }\n`;","import { lighten } from \"polished\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { \n    elementSizes, \n    gaps, \n    animations, \n    fontSizes, \n    styleGroup,\n    colorRange\n} from \"../../../constants/layout\";\nimport { StyledColorProps, UserInfoType } from \"../../../models\";\nimport withMeiosis, { WithMeiosisProps } from \"../../HOC\";\n\n\ntype ProfileWidgetProps = {\n    className?: string,\n}\n\nconst ProfileWidget: React.FC<WithMeiosisProps & ProfileWidgetProps> = ({globalActions, globalStates, className}) => {\n    const userInfo:UserInfoType | undefined = globalStates?.userInfo;\n\n    return (\n        <ProfileWidgetWrapper \n            className=\"profile-widget\"\n            themeColor={globalStates!.themeColor}\n        >\n            { !!userInfo ? \n                <div className=\"user-widget\">\n                    <div className=\"image\" style={{ backgroundImage: `url(${userInfo.imagePath})` }} />\n                    <div className=\"info\">\n                        <div className=\"display-name\">{userInfo.displayName}</div>\n                        <div className=\"rank\">{userInfo.roles}</div>\n                        <div className=\"email\"><a href={`mailto:${userInfo.email}`}>{userInfo.email}</a></div>\n                        <div className=\"date\">{userInfo.createdAt}</div>\n                    </div>\n                </div>\n                : null\n            }\n        </ProfileWidgetWrapper>\n    );\n};\n\nexport default withMeiosis(ProfileWidget);\n\nconst ProfileWidgetWrapper = styled.div<StyledColorProps>`\n    width: 100%; \n    height: ${ elementSizes.ProfileWidgetHeight }; \n    padding: ${ gaps.Small };\n    border-bottom: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n    box-sizing: border-box;\n    overflow: hidden;\n    transition: all ${ animations.Transition };\n\n    & .user-widget {\n        display: flex;\n        justify-content: space-between;\n\n        & .image {\n            width: calc(${ elementSizes.ProfileWidgetHeight } - 2 * ${ gaps.Small }); \n            height: calc(${ elementSizes.ProfileWidgetHeight } - 2 * ${ gaps.Small }); \n            background: ${ props => lighten(colorRange.L3, props.themeColor.grayColor!) } center / cover no-repeat ;\n            border-radius: ${elementSizes.BorderRadius};\n            transition: all ${ animations.Transition };\n        }\n\n        & .info {\n            width: calc(100% - (${ elementSizes.ProfileWidgetHeight } - ${ gaps.Small } )); \n            overflow: hidden;\n            transition: width ${ animations.Transition };\n\n            & * {\n                line-height: 1.2em;\n            }\n            \n            & .display-name {\n                width: 100%;\n                font-weight: 700;\n                font-size: ${ fontSizes.Common };\n                // display: -webkit-box;\n                // -webkit-line-clamp: 2;\n                // -webkit-box-orient: vertical; \n                // text-overflow: -o-ellipsis-lastline;\n                ${styleGroup.TextOverflow}\n                transition: font ${ animations.Transition };\n            }\n\n            & .rank {\n                font-size: ${ fontSizes.Small };\n                transition: font ${ animations.Transition };\n            }\n\n            & .email {\n                margin-top: ${ gaps.XSmall };\n                font-size: ${ fontSizes.Small };\n            }\n\n            & .date {\n                font-size: ${ fontSizes.Small };\n\n                &:before {\n                    content: 'Joined since ';\n                }\n            }\n        }\n    }\n\n    .menu-close & {\n        height: ${ elementSizes.MenuCloseWidth }; \n        padding: 0;\n\n        & .user-widget {\n            & .image {\n                width: ${ elementSizes.MenuCloseWidth };\n                height: ${ elementSizes.MenuCloseWidth };\n                border-radius: 0;\n            }\n\n            & .info {\n                & .display-name {\n                    font-size: 0;\n                }\n\n                & .rank {\n                    font-size: 0;\n                }\n            }\n        }\n    }\n\n    .peek & {\n        height: ${ elementSizes.ProfileWidgetHeight }; \n        padding: ${ gaps.Small };\n\n        & .user-widget {\n            & .image {\n                width: calc(${ elementSizes.ProfileWidgetHeight } - 2 * ${ gaps.Small }); \n                height: calc(${ elementSizes.ProfileWidgetHeight } - 2 * ${ gaps.Small }); \n            }\n\n            & .info {\n                width: calc(100% - (${ elementSizes.ProfileWidgetHeight } - ${ gaps.Small } )); \n        \n                & .display-name {\n                    font-size: ${ fontSizes.Common };\n                }\n\n                & .rank {\n                    font-size: ${ fontSizes.Small };\n                }\n            }\n        }\n    }\n`;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { lighten } from \"polished\";\nimport { \n    animations,\n    colorRange,\n    elementSizes, \n    fontSizes, \n    gaps \n} from \"../../constants/layout\";\nimport { appData } from \"../../constants/app\";\nimport { StyledColorProps } from \"../../models\";\nimport withMeiosis, { WithMeiosisProps } from \"../HOC\";\n\ntype FooterProps = {\n    className?: string,\n}\n\nconst Footer: React.FC<FooterProps & WithMeiosisProps> = ({globalStates, className}) => {\n    return (\n        <FooterWrapper className=\"footer\" themeColor={globalStates!.themeColor}>\n            <div className=\"icon\">\n                <span className=\"material-icons\">copyright</span>\n            </div>\n            <div className=\"text\">{ (new Date()).getFullYear() } { appData.title }</div>\n        </FooterWrapper>\n    );\n};\n\nexport default withMeiosis(Footer);\n\n\nconst FooterWrapper = styled.footer<StyledColorProps>`\n    display: flex;\n    width: 100%; \n    height: ${ elementSizes.FooterHeight };\n    border-top: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n    align-items: center;\n\n    & .icon,\n    & .text {\n        display: flex;\n        overflow: hidden;\n        align-items: center;\n    }\n\n    & .icon {\n        width: 1rem;\n        height: ${ elementSizes.FooterHeight };\n        padding: 0 0 0 ${ gaps.Small };\n        justify-content: center;\n        transition: all ${ animations.Transition };\n        \n        & .material-icons {\n            font-size: ${ fontSizes.Small };    \n            transition: font-size ${ animations.Transition };\n        }\n    }\n\n    & .text {\n        width: 100%;\n        font-size: ${ fontSizes.Small };\n        white-space: nowrap;\n        box-sizing: border-box;\n        transition: width ${ animations.Transition };\n    }\n\n\n    .menu-close & {\n        & .icon {\n            width: ${ elementSizes.MenuCloseWidth };\n            padding: 0;\n            \n            & .material-icons {\n                font-size: ${ fontSizes.XLarge };\n            }\n        }\n        \n        & .text {\n            width: 0;\n        }\n    }\n\n    .peek & {\n        & .icon {\n            width: 1rem;\n            padding: 0 0 0 ${ gaps.Small };\n\n            & .material-icons {\n                font-size: ${ fontSizes.Small };    \n            }\n        }\n        \n        & .text {\n            width: 100%;\n        }\n    }\n`;","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { darken, lighten, rgba } from \"polished\";\nimport { \n    colorRange,\n    elementSizes, \n    gaps, \n    animations, \n    fontSizes,\n} from \"../../constants/layout\";\nimport NavigationList from \"../NavigationList\";\nimport ProfileWidget from \"./ProfileWidget\";\nimport { appData } from \"../../constants/app\";\nimport Footer from \"../Footer\";\nimport withMeiosis, { WithMeiosisProps } from \"../HOC\";\nimport { StyledColorProps } from \"../../models\";\n\n\ntype SideMenuProps = {\n    onShowHide: () => void,\n    onHoverShow: (show: boolean) => void,\n    className?: string,\n}\n\nconst SideMenu: React.FC<SideMenuProps & WithMeiosisProps> = ({globalStates, onShowHide, onHoverShow, className}) => {\n    const [closeSubMenu, setCloseSubMenuStatus] = useState(false);\n\n    useEffect(() => {\n        if(!!closeSubMenu) {\n            setCloseSubMenuStatus(false);\n        }\n    }, [closeSubMenu]);\n\n    return (\n        <SideMenuWrapper className=\"side-menu\" themeColor={globalStates!.themeColor}>\n            <div className=\"body\"\n                onMouseEnter={() => onHoverShow(true)}\n                onMouseLeave={() => {\n                    onHoverShow(false);\n                    setCloseSubMenuStatus(true);\n                }}\n            >\n                <div className=\"site-title\">\n                    <div className=\"logo\" style={{ backgroundImage: `url(${appData.logoPath})` }} />\n                    <div className=\"title\">{ appData.title }</div>\n                </div>\n                <ProfileWidget />\n                <div className=\"menu-content\">\n                    <NavigationList triggerCloseSubmenu={closeSubMenu} />\n                </div>\n\n                <Footer />\n            </div>\n            <div className=\"clicker\" onClick={onShowHide}>\n                <span className=\"material-icons right\">chevron_right</span>\n                <span className=\"material-icons left\">chevron_left</span>\n            </div>\n        </SideMenuWrapper>\n    );\n};\n\nexport default withMeiosis(SideMenu);\n\n\nconst SideMenuWrapper = styled.div<StyledColorProps>`\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: ${ elementSizes.MenuWidth } ; \n    padding: 0 ${ gaps.Common } 0 0;\n    transition: width ${ animations.Transition };\n\n    & .body {\n        height: 100%;\n        background-color: #fff;\n    }\n\n    & .site-title {\n        display: flex;\n        width: 100%; \n        height: ${ elementSizes.SiteTitleHeight }; \n        background-color: ${ props => lighten(colorRange.L1, props.themeColor.primaryColor) };\n        color: #fff;\n        align-items: center;\n\n        & .logo {\n            width: ${ elementSizes.SiteTitleHeight };\n            height: ${ elementSizes.SiteTitleHeight }; \n            background: ${ props => props.themeColor.primaryColor } center / 70% auto no-repeat ;\n            margin-right: ${ gaps.Common };\n            transition: margin-right ${ animations.Transition };\n        }\n        \n        & .title {\n            font-weight: 700;\n            font-size: ${ fontSizes.XLarge };\n            transition: all ${ animations.Transition };\n        }\n    }\n\n    & .menu-content {\n        width: 100%; \n        height: calc(100% - ${ elementSizes.SiteTitleHeight } - ${ elementSizes.ProfileWidgetHeight } - ${ elementSizes.FooterHeight });\n        overflow-y: auto;\n        transition: height ${ animations.Transition };\n    }\n\n    & .clicker {\n        display: flex;\n        visibility: hidden;\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: ${ gaps.Common };\n        height: 100%;\n        cursor: pointer;\n        overflow: hidden;\n        justify-content: center;\n        align-items: center;\n\n        & .material-icons {\n            color: ${ props => darken(colorRange.L2, props.themeColor.primaryColor) };\n\n            &.right {\n                display: none;\n            }\n        }\n    }\n\n    &:hover {\n        & .clicker {\n            background-color: ${ rgba('#fff', 0.5) };\n            visibility: visible;\n        }\n    }\n\n    .menu-close & {\n        width: ${ elementSizes.MenuCloseWidth }; \n        \n        & .site-title {\n            & .logo {\n                margin-right: 0;\n            }\n\n            & .title {\n                width: 0;\n                font-size: 0;\n            }\n        }\n\n        & .menu-content {\n            height: calc(100% - ${ elementSizes.SiteTitleHeight } - ${ elementSizes.MenuCloseWidth } - ${ elementSizes.FooterHeight });\n        }\n    \n        & .clicker {\n            & .material-icons {\n                &.left {\n                    display: none;\n                }\n\n                &.right {\n                    display: inline;\n                }\n            }\n        }\n    }\n\n    .peek & {\n        width: ${ elementSizes.MenuWidth }; \n\n        & .site-title {\n            & .logo {\n                margin-right: ${ gaps.Common };\n            }\n            \n            & .title {\n                font-size: ${ fontSizes.XLarge };\n            }\n        }\n\n        & .menu-content {\n            height: calc(100% - ${ elementSizes.SiteTitleHeight } - ${ elementSizes.ProfileWidgetHeight } - ${ elementSizes.FooterHeight });\n        }\n    }\n`;\n","import { darken, lighten } from \"polished\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { \n    colorRange,\n    elementSizes, \n    fontSizes, \n    gaps \n} from \"../../../constants/layout\";\nimport { NotificationType, StyledColorProps } from \"../../../models\";\nimport withMeiosis, { WithMeiosisProps } from \"../../HOC\";\n\n\ntype NotificationItemProps = {\n    notificationItemData: NotificationType\n}\n\nconst NotificationItem: React.FC<WithMeiosisProps & NotificationItemProps> = ({\n    globalActions, \n    globalStates, \n    notificationItemData,\n}) => {\n    const {\n        title,\n        redirectPath,\n        read,\n        createdAt,\n        imagePath,\n        icon\n    } = notificationItemData;\n    \n    const onHideNotificationHandler = () => {\n        globalActions.updateLockPageScroll(false);\n        globalActions.showHideNotificationPanel(false);\n    };\n\n    return (\n        <NotificationItemWrapper \n            themeColor={globalStates!.themeColor}\n            className={[\n                \"notification-item\",\n                (!!read ? ' read' : '')\n            ].join('')}>\n            <Link \n                className=\"notification-link\" \n                to={redirectPath} \n                onClick={onHideNotificationHandler}\n            >\n                <div className=\"image-holder\">\n                    { !!icon && icon !== '' \n                        ? <span className=\"material-icons\">{icon}</span>\n                        : <span className=\"image\" style={{ backgroundImage: `url(${imagePath})` }} />\n                    }\n                </div>\n                <div className=\"info\">\n                    <div className=\"title\">{ title }</div>\n                    <div className=\"date\">{ createdAt }</div>\n                </div>\n            </Link>\n            <div className=\"more-action\">\n                <button>\n                    <span className=\"material-icons\">more_vert</span>\n                </button>\n            </div>\n        </NotificationItemWrapper>\n    );\n};\n\nexport default withMeiosis(NotificationItem);\n\n\nconst NotificationItemWrapper = styled.div<StyledColorProps>`\n    position: relative;\n    display: flex;\n    border-bottom: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n    box-sizing: border-box;\n    justify-content: space-between;\n\n    &:after {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n        width: 3px;\n        background-color: ${props => props.themeColor.dangerColor!};\n        content: '';\n    }\n\n    & .notification-link {\n        display: flex;\n        width: calc(100% - 1.5rem);\n        justify-content: space-between;\n        text-decoration: none;\n\n        & .image-holder {\n            display: flex;\n            width: 3rem;\n            padding: ${ gaps.Small };\n            justify-content: space-between;\n            align-items: center;\n            \n            & .image {\n                display: block;\n                width: 3rem; \n                height: 3rem; \n                background: ${ props => lighten(colorRange.L3, props.themeColor.grayColor!) } center / cover no-repeat;\n                border-radius: ${elementSizes.BorderRadius};\n            }\n            \n            & .material-icons {\n                display: flex;\n                width: 3rem; \n                height: 3rem; \n                font-size: 2.5rem;\n                color: #fff;\n                border-radius: ${elementSizes.BorderRadius};\n                background-color: ${ props => lighten(colorRange.L3, props.themeColor.secondaryColor!) };\n                justify-content: center;\n                align-items: center;\n            }\n        }\n\n        & .info {\n            width: calc(100% - 3rem - 2 * ${gaps.Small});\n            padding: ${ gaps.Small } 0;\n\n            & .title {\n                font-size: ${fontSizes.Common};\n                font-weight: 500;\n                line-height: 1.2em;\n                color: ${ props => darken(colorRange.L3, props.themeColor.secondaryColor) };\n            }\n\n            & .date {\n                margin-top: ${gaps.XSmall};\n                font-size: ${fontSizes.Small};\n                color: ${ props => lighten(colorRange.L3, props.themeColor.grayColor!) }\n            }\n        }\n    }\n\n    & .more-action {\n        width: 1.5rem;\n\n        & > button {\n            height: 100%;\n            width: 100%;\n            padding: 0;\n            border: 0;\n            text-align: center;\n            background: transparent;\n            cursor: pointer;\n\n            & .material-icons {\n                font-size: ${fontSizes.Large};\n            }\n        }\n    }\n\n    &.read {\n        &:after {\n            display: none;\n        }\n    }\n`;","import React from \"react\";\nimport { darken, lighten, rgba } from \"polished\";\nimport styled from \"styled-components\";\nimport { \n    animations,\n    colorRange,\n    elementSizes, \n    gaps \n} from \"../../../constants/layout\";\nimport { \n    NotificationGroupType, \n    NotificationType, \n    StyledColorProps \n} from \"../../../models\";\nimport withMeiosis, { WithMeiosisProps } from \"../../HOC\";\nimport NotificationItem from \"../NotificationItem\";\nimport Notification from \"..\";\n\n\ntype NotificationPanelListProps = {\n    className?: string,\n}\n\nconst NotificationPanelList: React.FC<WithMeiosisProps & NotificationPanelListProps> = ({globalActions, globalStates, className}) => {\n    const notificationData = globalStates?.userInfo?.notification;\n    const showNotificationPanel = globalStates?.showNotificationPanel;\n\n    const onHideNotificationPanel = () => {\n        globalActions.updateLockPageScroll(false);\n        globalActions.showHideNotificationPanel(false);\n    };\n\n    return ( !!notificationData ?\n        <NotificationPanelListWrapper \n            themeColor={globalStates!.themeColor}\n            className={[\n                \"notification-panel-list\",\n                (!!showNotificationPanel ? ' show' : '')\n            ].join('')}>\n            <div className=\"clicker\" onClick={onHideNotificationPanel}>\n                <span className=\"material-icons right\">chevron_right</span>\n            </div>\n\n            <div className=\"content-holder\">\n                <div className=\"panel-title\">\n                    <div className=\"icon\">\n                        <Notification disableClick={true} />\n                    </div>\n                    <div className=\"text\">Notification</div>\n                </div>\n                { notificationData.map((notificationGroup: NotificationGroupType, index) => (\n                    <div key={`g-${index}`}>\n                        <div className=\"group-title\">{notificationGroup.title}</div>\n                        { notificationGroup.notificationList.map((notificationItem: NotificationType, index2) => \n                            <NotificationItem key={`g-${index}-${index2}`} notificationItemData = {notificationItem} />\n                        ) }\n                    </div>\n                )) }\n            </div>\n        </NotificationPanelListWrapper>\n        : null\n    );\n};\n\nexport default withMeiosis(NotificationPanelList);\n\n\nconst NotificationPanelListWrapper = styled.div<StyledColorProps>`\n    position: fixed;\n    top: 0;\n    right: 0;\n    width: 0;\n    padding-left: ${ gaps.Common };\n    height: 100%;\n    transition: width ${animations.Transition};\n    overflow: hidden;\n    \n    & .clicker {\n        position: absolute;\n        top: 0;\n        left: 0;\n        display: none;\n        width: ${ gaps.Common };\n        height: 100%;\n        cursor: pointer;\n        overflow: hidden;\n        justify-content: center;\n        align-items: center;\n        \n        & .material-icons {\n            color: ${ props => darken(colorRange.L2, props.themeColor.primaryColor) };\n            display: none;\n        }\n    }\n    \n    & .content-holder {\n        width: ${elementSizes.NotificationPanelWidth};\n        height: 100%;\n        overflow-y: auto;\n        background-color: #fff;\n\n        & .panel-title {\n            display: flex; \n            height: ${elementSizes.HeaderHeight};\n            justtify-content: space-between;\n            align-items: center;\n\n            & .icon {\n                width: ${elementSizes.HeaderHeight};\n                height: ${elementSizes.HeaderHeight};\n            }\n            \n            & .text {\n                width: calc(100% - ${elementSizes.HeaderHeight} - ${gaps.Small});\n                font-weight: 500;\n            }\n        }\n\n        & .group-title {\n            display: flex; \n            height: 2.5rem;\n            padding: 0 ${ gaps.Small };\n            border-bottom: ${ props => elementSizes.Border1Pixel(lighten(colorRange.L5, props.themeColor.grayColor!)) };\n            box-sizing: border-box;\n            background: ${ props => lighten(colorRange.L5, props.themeColor.grayColor!) };\n            align-items: center;\n            font-weight: 500;\n        }\n    }\n    \n    &.show {\n        width: ${elementSizes.NotificationPanelWidth};\n\n        & .clicker {\n            display: flex;\n        }\n\n        &:hover {\n            background-color: ${ rgba('#fff', 0.5) };\n        }\n    }\n\n    &:hover {\n        & .clicker {\n            & .material-icons {\n                display: inline-block;\n            }\n        }\n    }\n`;","import React from 'react';\nimport { RouteComponentProps, StaticContext } from 'react-router';\nimport { \n    BrowserRouter as Router, \n    Switch,\n    Route,\n    withRouter,\n} from 'react-router-dom';\nimport { lighten } from 'polished';\nimport styled from 'styled-components';\nimport { \n    gaps, \n    elementSizes, \n    animations, \n    colorRange,\n    fontSizes\n} from './constants/layout';\nimport { routes } from './constants/routes';\nimport Login from './pages/Auth/Login';\nimport ComponentAccordion from './pages/Components/Accordion';\nimport ComponentAlert from './pages/Components/Alert';\nimport ComponentTable from './pages/Components/Table';\nimport Dashboard from './pages/Dashboard';\nimport withMeiosis, { WithMeiosisProps } from './components/HOC';\nimport Header from './components/Header';\nimport Modal from './components/Modal';\nimport SideMenu from './components/SideMenu';\nimport NotificationPanelList from './components/Notification/PanelList';\nimport { StyledColorProps } from './models';\n\n\ninterface AppProps extends WithMeiosisProps {\n    [key: string]: any\n}\n\ninterface AppState extends WithMeiosisProps {\n    [key: string]: any\n}\n\nclass App extends React.Component<AppProps, AppState> {\n    dashboardRef: React.RefObject<HTMLDivElement> = React.createRef();\n    resizeTimer: number = 0;\n    resizeDoneEvent: CustomEvent<string> = new CustomEvent('resizeEnd', { detail: 'resizeEnded' });\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResizeHandler);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResizeHandler);\n    }\n\n    onWindowResizeHandler = () => {\n        clearTimeout(this.resizeTimer);\n        this.resizeTimer = window.setTimeout(() => {\n            window.dispatchEvent(this.resizeDoneEvent);\n        }, 250);\n    };\n\n    showHideSideMenuEvent = (isHidden: boolean): CustomEvent<{isHidden: boolean}> => new CustomEvent('showHideSideMenu', { \n        detail: { isHidden } \n    });\n\n    onShowHideMenuHandler = () => {\n        const dashboardDom = this.dashboardRef.current;\n        if(dashboardDom) {\n            if(dashboardDom.classList.contains('menu-close')) {\n                dashboardDom.classList.remove('menu-close');\n                window.dispatchEvent(this.showHideSideMenuEvent(false));\n            } else {\n                dashboardDom.classList.add('menu-close');\n                window.dispatchEvent(this.showHideSideMenuEvent(true));\n            }\n        }\n    };\n\n    onHoverShowMenuHandler = (show: boolean) => {\n        const dashboardDom = this.dashboardRef.current;\n        if(dashboardDom) {\n            if(dashboardDom.classList.contains('menu-close')) {\n                if(show) dashboardDom.classList.add('peek');\n                else dashboardDom.classList.remove('peek');\n            }\n        }\n    };\n\n    render() {\n        const { globalStates } = this.props;\n\n        return (\n            <Router>\n                <DashboardScreen>\n                    <DashboardWrapper \n                        className={[\n                            \"fiix-dashboard\",\n                            (!globalStates?.isLoggedIn ? ' no-menu' : '')\n                        ].join('')}\n                        ref={this.dashboardRef}\n                        themeColor={globalStates!.themeColor}\n                    >\n                        { !!globalStates?.isLoggedIn ? <>\n                            <Header />\n\n                            <div className=\"content\">\n                                <Switch>\n                                    <Route exact path={routes.HOME} component={Dashboard} />\n                                    <Route path={'/:pageId'} component={RoutingComponent} />\n                                </Switch>\n                            </div>\n        \n                            <SideMenu \n                                className=\"closed\" \n                                onShowHide={this.onShowHideMenuHandler}\n                                onHoverShow={this.onHoverShowMenuHandler}\n                            />\n                        </> : (\n                            <Switch>\n                                <Route exact path={routes.HOME} component={Dashboard} />\n                                <Route path={'/:pageId'} component={RoutingComponent} />\n                            </Switch>\n                        )}\n                        <Modal />\n                        <NotificationPanelList />\n                    </DashboardWrapper>\n                </DashboardScreen>\n            </Router>\n        );\n    }\n}\n\n\nclass DashboardScreenBase extends React.Component<RouteComponentProps<any, StaticContext, any>> {\n    render() {\n        return <>{this.props.children}</>;\n    }\n}\nconst DashboardScreen = withRouter(DashboardScreenBase);\n\n\nconst RoutingComponent: React.FC<{match: any}> = ({match}) => (<>\n    <Switch>\n        <Route path={routes.SIGNIN} component={Login} />\n        {/* \n        <Route path={routes.SIGNIN + '/:id'} component={Login} />\n        <Route path={routes.SIGNUP} component={Register} />\n        <Route path={routes.SIGNUP + '/:id'} component={Register} /> \n        */}\n        <Route path={routes.DASHBOARD} component={Dashboard} />\n        <Route path={routes.COMPONENT_ACCORDION} component={ComponentAccordion} />\n        <Route path={routes.COMPONENT_ALERT} component={ComponentAlert} />\n        <Route path={routes.COMPONENT_TABLE} component={ComponentTable} />\n        {/* <Route path=\"*\" render={(props: any) => <Share routeParams={{\n            linkId: match.params.linkId\n        }} {...props} />} /> */}\n    </Switch>\n</>);\n\n\nexport default withMeiosis(App);\n\n\nconst DashboardWrapper = styled.div<StyledColorProps>`\n    height: 100%;\n    padding-left: ${ elementSizes.MenuWidth };\n    transition: padding-left ${ animations.Transition };\n\n    &.no-menu {\n        padding-left: 0;\n    }\n\n    &.menu-close {\n        padding-left: ${ elementSizes.MenuCloseWidth };\n    }\n\n    & .content {\n        padding: ${gaps.Common} ${gaps.Large}; \n    }\n\n    h1, h2, h3, h4, h5, h6 {\n        margin-top: 0;\n        color: ${ props => props.themeColor.primaryColor };\n        margin-bottom: 0.75em;\n    }\n\n    p {\n        margin-top: 0;\n    }\n\n    a {\n        color: ${ props => lighten(colorRange.L2, props.themeColor.primaryColor) };\n    }\n\n    button {\n        &:focus {\n            outline: 0;\n        }\n    }\n\n    & .highlighted {\n        font-weight: 500;\n    }\n\n    & .sub-text {\n        font-size: ${fontSizes.Common};\n    }\n\n    & .columnised {\n        display: flex;\n        width: 100%;\n        justify-content: space-between;\n\n        & .col-50 {\n            width: calc(50% - ${gaps.Common} / 2);\n        }\n\n        @media screen and (max-width: ${elementSizes.MediaScreenMediumWidth}) {\n            display: block;\n    \n            & .col-50 {\n                width: 100%;\n            }\n        }\n    }\n`;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    console.log('registerValidSW, state:', installingWorker.state);\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    console.log('checkValidServiceWorker, start fetching...');\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.register();\n"],"sourceRoot":""}